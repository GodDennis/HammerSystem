{"version":3,"sources":["layouts/inner-app-layout/index.js","views/app-views/pages/setting/EditProfile.js","views/app-views/pages/setting/index.js"],"names":["useBreakpoint","Grid","SideContent","props","sideContent","sideContentWidth","border","className","style","width","SideContentMobile","visible","onSideContentClose","placement","closable","onClose","bodyStyle","paddingLeft","paddingRight","InnerAppLayout","mainContent","pageHeader","sideContentGutter","isMobile","utils","getBreakPoint","includes","useState","setVisible","e","MenuOutlined","onClick","EditProfile","avatarEndpoint","state","name","user","email","subTitle","userName","username","dateOfBirth","phoneNumber","phone","website","address","city","postcode","this","history","push","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","avatarUrl","Flex","alignItems","mobileFlex","size","src","icon","UserOutlined","onChange","info","key","file","status","getBase64","originFileObj","imageUrl","setState","message","success","content","duration","loading","showUploadList","action","type","layout","initialValues","onFinish","values","setTimeout","redirectBackToClients","onFinishFailed","errorInfo","console","log","xs","sm","md","lg","gutter","ROW_GUTTER","Item","label","rules","required","htmlType","Component","EditProfileWithRouter","withRouter","connect","users","selectedUser","SettingOption","match","location","defaultSelectedKeys","url","mode","selectedKeys","pathname","to","SettingContent","id","params","exact","from","path","Setting"],"mappings":"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","file":"static/js/19.cba3168f.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from \"prop-types\";\r\nimport { Grid, Drawer } from \"antd\";\r\nimport utils from 'utils'\r\nimport { MenuOutlined } from '@ant-design/icons';\r\n\r\nconst { useBreakpoint } = Grid;\r\n\r\nconst SideContent = props => {\r\n\tconst { sideContent, sideContentWidth = 250, border } = props\r\n\treturn (\r\n\t\t<div className={`side-content ${border? 'with-border': ''}`} style={{width: `${sideContentWidth}px`}}>\r\n\t\t\t{sideContent}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst SideContentMobile = props => {\r\n\tconst { sideContent, visible, onSideContentClose } = props\r\n\treturn (\r\n\t\t<Drawer\r\n\t\t\twidth={320}\r\n\t\t\tplacement=\"left\"\r\n\t\t\tclosable={false}\r\n\t\t\tonClose={onSideContentClose}\r\n\t\t\tvisible={visible}\r\n\t\t\tbodyStyle={{paddingLeft: 0, paddingRight: 0}}\r\n\t\t>\r\n\t\t\t<div className=\"h-100\">\r\n\t\t\t\t{sideContent}\r\n\t\t\t</div>\r\n\t\t</Drawer>\r\n\t)\r\n}\r\n\r\nexport const InnerAppLayout = props => {\r\n\tconst { mainContent, pageHeader, sideContentGutter = true } = props\r\n\tconst isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg')\r\n\tconst [visible, setVisible] = useState(false);\r\n\r\n\tconst close = (e) => {\r\n\t\tsetVisible(false)\r\n\t} \r\n\r\n\tconst openSideContentMobile = () => {\r\n\t\tsetVisible(true)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"inner-app-layout\">\r\n\t\t\t{isMobile ? \r\n\t\t\t\t<SideContentMobile \r\n\t\t\t\t\tvisible={visible} \r\n\t\t\t\t\tonSideContentClose={close}\r\n\t\t\t\t\t{...props}\r\n\t\t\t\t/> \r\n\t\t\t\t: \r\n\t\t\t\t<SideContent {...props} />\r\n\t\t\t}\r\n\t\t\t<div className={`main-content ${pageHeader? 'has-page-header' : ''} ${sideContentGutter? 'gutter' : 'no-gutter'}`}>\r\n\t\t\t\t{isMobile ? \r\n\t\t\t\t\t<div className={`font-size-lg mb-3 ${!sideContentGutter ? 'pt-3 px-3' : ''}`}>\r\n\t\t\t\t\t\t<MenuOutlined onClick={() => openSideContentMobile()}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t:\r\n\t\t\t\t\tnull\r\n\t\t\t\t}\r\n\t\t\t\t{mainContent}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nInnerAppLayout.propTypes = {\r\n\tsideContent: PropTypes.node,\r\n\tmainContent: PropTypes.node,\r\n\tpageHeader: PropTypes.bool,\r\n\tsideContentWidth: PropTypes.number,\r\n\tborder: PropTypes.bool,\r\n\tsideContentGutter: PropTypes.bool\r\n};\r\n\r\nexport default InnerAppLayout\r\n","import React, { Component } from \"react\";\r\nimport { Form, Avatar, Button, Input, DatePicker, Row, Col, message, Upload } from \"antd\";\r\nimport { UserOutlined } from \"@ant-design/icons\";\r\nimport { ROW_GUTTER } from \"constants/ThemeConstant\";\r\nimport Flex from \"components/shared-components/Flex\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom/cjs/react-router-dom.min\";\r\n\r\nclass EditProfile extends Component {\r\n    redirectBackToClients() {\r\n        const { history } = this.props;\r\n        history.push(\"/app/main/clients/list\");\r\n    }\r\n\r\n    avatarEndpoint = \"https://www.mocky.io/v2/5cc8019d300000980a055e76\";\r\n\r\n    state = {\r\n        name: this.props.user?.name,\r\n        email: this.props.user?.subTitle,\r\n        userName: this.props.user?.username,\r\n        dateOfBirth: this.props.user?.dateOfBirth,\r\n        phoneNumber: this.props.user?.phone,\r\n        website: this.props.user?.website,\r\n        address: this.props.user?.address,\r\n        city: this.props.user?.city,\r\n        postcode: this.props.user?.postcode,\r\n    };\r\n\r\n    getBase64(img, callback) {\r\n        const reader = new FileReader();\r\n        reader.addEventListener(\"load\", () => callback(reader.result));\r\n        reader.readAsDataURL(img);\r\n    }\r\n\r\n    render() {\r\n        const onFinish = values => {\r\n            const key = \"updatable\";\r\n            message.loading({ content: \"Updating...\", key });\r\n            setTimeout(() => {\r\n                this.setState({\r\n                    name: values.name,\r\n                    email: values.email,\r\n                    userName: values.userName,\r\n                    dateOfBirth: values.dateOfBirth,\r\n                    phoneNumber: values.phoneNumber,\r\n                    website: values.website,\r\n                    address: values.address,\r\n                    city: values.city,\r\n                    postcode: values.postcode,\r\n                });\r\n                message.success({ content: \"Done!\", key, duration: 2 });\r\n                this.redirectBackToClients();\r\n            }, 1000);\r\n        };\r\n\r\n        const onFinishFailed = errorInfo => {\r\n            console.log(\"Failed:\", errorInfo);\r\n        };\r\n\r\n        const onUploadAavater = info => {\r\n            const key = \"updatable\";\r\n            if (info.file.status === \"uploading\") {\r\n                message.loading({ content: \"Uploading...\", key, duration: 1000 });\r\n                return;\r\n            }\r\n            if (info.file.status === \"done\") {\r\n                this.getBase64(info.file.originFileObj, imageUrl =>\r\n                    this.setState({\r\n                        avatarUrl: imageUrl,\r\n                    })\r\n                );\r\n                message.success({ content: \"Uploaded!\", key, duration: 1.5 });\r\n            }\r\n        };\r\n\r\n        const onRemoveAvater = () => {\r\n            this.setState({\r\n                avatarUrl: \"\",\r\n            });\r\n        };\r\n\r\n        const {\r\n            name,\r\n            email,\r\n            userName,\r\n            dateOfBirth,\r\n            phoneNumber,\r\n            website,\r\n            address,\r\n            city,\r\n            postcode,\r\n            avatarUrl,\r\n        } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <Flex\r\n                    alignItems='center'\r\n                    mobileFlex={false}\r\n                    className='text-center text-md-left'>\r\n                    <Avatar\r\n                        size={90}\r\n                        src={avatarUrl}\r\n                        icon={<UserOutlined />}\r\n                    />\r\n                    <div className='ml-md-3 mt-md-0 mt-3'>\r\n                        <Upload\r\n                            onChange={onUploadAavater}\r\n                            showUploadList={false}\r\n                            action={this.avatarEndpoint}>\r\n                            <Button type='primary'>Change Avatar</Button>\r\n                        </Upload>\r\n                        <Button\r\n                            className='ml-2'\r\n                            onClick={onRemoveAvater}>\r\n                            Remove\r\n                        </Button>\r\n                    </div>\r\n                </Flex>\r\n                <div className='mt-4'>\r\n                    <Form\r\n                        name='basicInformation'\r\n                        layout='vertical'\r\n                        initialValues={{\r\n                            name: name,\r\n                            email: email,\r\n                            username: userName,\r\n                            dateOfBirth: dateOfBirth,\r\n                            phoneNumber: phoneNumber,\r\n                            website: website,\r\n                            address: address,\r\n                            city: city,\r\n                            postcode: postcode,\r\n                        }}\r\n                        onFinish={onFinish}\r\n                        onFinishFailed={onFinishFailed}>\r\n                        <Row>\r\n                            <Col\r\n                                xs={24}\r\n                                sm={24}\r\n                                md={24}\r\n                                lg={16}>\r\n                                <Row gutter={ROW_GUTTER}>\r\n                                    <Col\r\n                                        xs={24}\r\n                                        sm={24}\r\n                                        md={12}>\r\n                                        <Form.Item\r\n                                            label='Name'\r\n                                            name='name'\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: \"Please input your name!\",\r\n                                                },\r\n                                            ]}>\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col\r\n                                        xs={24}\r\n                                        sm={24}\r\n                                        md={12}>\r\n                                        <Form.Item\r\n                                            label='Username'\r\n                                            name='username'\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: \"Please input your username!\",\r\n                                                },\r\n                                            ]}>\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col\r\n                                        xs={24}\r\n                                        sm={24}\r\n                                        md={12}>\r\n                                        <Form.Item\r\n                                            label='Email'\r\n                                            name='email'\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    type: \"email\",\r\n                                                    message: \"Please enter a valid email!\",\r\n                                                },\r\n                                            ]}>\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col\r\n                                        xs={24}\r\n                                        sm={24}\r\n                                        md={12}>\r\n                                        <Form.Item\r\n                                            label='Date of Birth'\r\n                                            name='dateOfBirth'>\r\n                                            <DatePicker className='w-100' />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col\r\n                                        xs={24}\r\n                                        sm={24}\r\n                                        md={12}>\r\n                                        <Form.Item\r\n                                            label='Phone Number'\r\n                                            name='phoneNumber'>\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col\r\n                                        xs={24}\r\n                                        sm={24}\r\n                                        md={12}>\r\n                                        <Form.Item\r\n                                            label='Website'\r\n                                            name='website'>\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col\r\n                                        xs={24}\r\n                                        sm={24}\r\n                                        md={24}>\r\n                                        <Form.Item\r\n                                            label='Address'\r\n                                            name='address'>\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col\r\n                                        xs={24}\r\n                                        sm={24}\r\n                                        md={12}>\r\n                                        <Form.Item\r\n                                            label='City'\r\n                                            name='city'>\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col\r\n                                        xs={24}\r\n                                        sm={24}\r\n                                        md={12}>\r\n                                        <Form.Item\r\n                                            label='Post code'\r\n                                            name='postcode'>\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Button\r\n                                    type='primary'\r\n                                    htmlType='submit'>\r\n                                    Save Change\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return { user: state.users.selectedUser };\r\n};\r\nconst EditProfileWithRouter = withRouter(EditProfile);\r\nexport default connect(mapStateToProps)(EditProfileWithRouter);\r\n","import React, { Component } from \"react\";\r\nimport { UserOutlined } from \"@ant-design/icons\";\r\nimport { Menu } from \"antd\";\r\nimport { Link, Redirect, Route, Switch } from \"react-router-dom\";\r\nimport InnerAppLayout from \"layouts/inner-app-layout\";\r\nimport EditProfile from \"./EditProfile\";\r\n\r\nconst SettingOption = ({ match, location }) => {\r\n    return (\r\n        <Menu\r\n            defaultSelectedKeys={`${match.url}/edit-profile`}\r\n            mode='inline'\r\n            selectedKeys={[location.pathname]}>\r\n            <Menu.Item key={`${match.url}/edit-profile`}>\r\n                <UserOutlined />\r\n                <span>Edit Profile</span>\r\n                <Link to={\"edit-profile\"} />\r\n            </Menu.Item>\r\n        </Menu>\r\n    );\r\n};\r\n\r\nconst SettingContent = ({ match }) => {\r\n    const { id } = match.params;\r\n    return (\r\n        <Switch>\r\n            <Redirect\r\n                exact\r\n                from={`${match.url}`}\r\n                to={`${match.url}/edit-profile`}\r\n            />\r\n            <Route path={`${match.url}/edit-profile`}>\r\n                <EditProfile id={id} />\r\n            </Route>\r\n        </Switch>\r\n    );\r\n};\r\n\r\nexport class Setting extends Component {\r\n    render() {\r\n        return (\r\n            <InnerAppLayout\r\n                sideContentWidth={320}\r\n                sideContent={<SettingOption {...this.props} />}\r\n                mainContent={<SettingContent {...this.props} />}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default Setting;\r\n"],"sourceRoot":""}