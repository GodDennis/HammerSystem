{"version":3,"sources":["components/shared-components/Flex/index.js","configs/AppConfig.js","configs/EnvironmentConfig.js","redux/constants/Users.js","redux/constants/Auth.js","constants/ThemeConstant.js","redux/reducers/Auth.js","redux/constants/Theme.js","redux/reducers/Theme.js","redux/reducers/Users.js","redux/reducers/Scheduler.js","redux/reducers/index.js","configs/FirebaseConfig.js","auth/FirebaseAuth.js","services/FirebaseService.js","redux/sagas/Auth.js","redux/sagas/index.js","redux/store/index.js","components/util-components/IntlMessage/index.js","components/util-components/Icon/index.js","configs/NavigationConfig.js","redux/actions/Theme.js","components/layout-components/MenuContent.js","components/layout-components/SideNav.js","components/layout-components/TopNav.js","components/shared-components/Loading/index.js","components/layout-components/Logo.js","components/layout-components/MobileNav.js","components/shared-components/ColorPicker/index.js","components/layout-components/NavLanguage.js","components/layout-components/ThemeConfigurator.js","components/layout-components/NavPanel.js","components/layout-components/NavSearch/SearchInput.js","components/layout-components/NavSearch/index.js","components/layout-components/HeaderNav.js","components/layout-components/AppBreadcrumb.js","components/layout-components/PageHeader.js","components/layout-components/Footer.js","views/app-views/index.js","layouts/app-layout/index.js","views/auth-views/index.js","layouts/auth-layout/index.js","lang/entries/en_US.js","lang/entries/zh_CN.js","lang/entries/fr_FR.js","lang/index.js","lang/entries/ja_JP.js","views/index.js","App.js","serviceWorker.js","index.js","utils/index.js","redux/actions/Auth.js","redux/constants/Scheduler.js"],"names":["Flex","props","children","className","alignItems","justifyContent","mobileFlex","flexDirection","defaultProps","APP_NAME","API_BASE_URL","API_ENDPOINT_URL","APP_PREFIX_PATH","AUTH_PREFIX_PATH","THEME_CONFIG","navCollapsed","sideNavTheme","SIDE_NAV_LIGHT","locale","navType","NAV_TYPE_SIDE","topNavColor","headerNavColor","mobileNav","currentTheme","GET_USERS","SET_SELECTED_USER","SIGNIN","AUTHENTICATED","SIGNOUT","SIGNOUT_SUCCESS","SIGNUP","SIGNUP_SUCCESS","SHOW_AUTH_MESSAGE","HIDE_AUTH_MESSAGE","SHOW_LOADING","AUTH_TOKEN","SIGNIN_WITH_GOOGLE","SIGNIN_WITH_GOOGLE_AUTHENTICATED","SIGNIN_WITH_FACEBOOK","SIGNIN_WITH_FACEBOOK_AUTHENTICATED","ROW_GUTTER","SIDE_NAV_WIDTH","SIDE_NAV_COLLAPSED_WIDTH","SIDE_NAV_DARK","NAV_TYPE_TOP","initState","loading","message","showMessage","redirect","token","localStorage","getItem","auth","state","action","type","TOGGLE_COLLAPSED_NAV","CHANGE_LOCALE","SIDE_NAV_STYLE_CHANGE","NAV_TYPE_CHANGE","TOP_NAV_COLOR_CHANGE","HEADER_NAV_COLOR_CHANGE","TOGGLE_MOBILE_NAV","SWITCH_THEME","initTheme","theme","users","usersData","selectedUser","user","initialState","dragElements","draggedElement","downloadData","draggedBoard","Scheduler","SET_ELEMENTS","elements","SET_DRAGGED_ELEMENT","element","SET_DOWNLOAD_DATA","data","ADD_BOARD_ELEMENTS","CLEANUP_BOARD_ELEMENTS","UPDATE_BOARD_ELEMENTS","console","log","map","el","id","payload","cords","x","y","CLEANUP","reducers","combineReducers","Theme","Auth","Users","scheduler","FirebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","firebaseConfig","firestore","googleAuthProvider","currentUser","GoogleAuthProvider","facebookAuthProvider","FacebookAuthProvider","FirebaseService","TwitterAuthProvider","GithubAuthProvider","signInEmailRequest","email","password","a","signInWithEmailAndPassword","then","catch","err","signOutRequest","signOut","signInGoogleRequest","signInWithPopup","signInFacebookRequest","signUpEmailRequest","createUserWithEmailAndPassword","signInWithFBEmail","signUpWithFBEmail","signInWithFBGoogle","signInWithFacebook","rootSaga","takeEvery","call","put","showAuthMessage","setItem","uid","authenticated","undefined","signOutUser","removeItem","signOutSuccess","signUpSuccess","signInWithGoogleAuthenticated","signInWithFacebookAuthenticated","all","fork","getState","sagaMiddleware","createSagaMiddleware","middlewares","thunk","store","preloadedState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","run","configureStore","injectIntl","withRef","Icon","this","React","createElement","Component","mainNavTree","key","path","title","icon","breadcrumb","submenu","DashboardOutlined","SnippetsOutlined","ShoppingCartOutlined","ShoppingOutlined","UserOutlined","PictureOutlined","GiftOutlined","ShopOutlined","UsergroupAddOutlined","MailOutlined","systemNavTree","SettingOutlined","MobileOutlined","FileTextOutlined","navigationConfig","toggleCollapsedNav","onMobileNavToggle","SubMenu","Menu","useBreakpoint","Grid","setLocale","isLocaleOn","localeKey","toString","setDefaultOpen","keyList","keyString","arr","split","index","length","elm","push","SideNavContent","routeInfo","hideGroupTitle","localization","isMobile","utils","getBreakPoint","includes","closeMobileNav","mode","style","height","borderRight","defaultSelectedKeys","defaultOpenKeys","menu","ItemGroup","subMenuFirst","subMenuSecond","Item","onClick","to","TopNavContent","backgroundColor","popupClassName","connect","Sider","Layout","width","collapsed","autoHide","getColorContrast","LoadingOutlined","fontSize","spin","Loading","align","cover","indicator","getLogoWidthGutter","isNavTop","mobileLogo","getLogo","logoType","getLogoDisplay","src","alt","onClose","placement","closable","visible","bodyStyle","padding","ArrowLeftOutlined","ColorPicker","colorChange","color","useState","setVisible","pickerColor","setPickerColor","boxColor","setBoxColor","useEffect","onPickerDropdown","onChange","value","rgb","rgba","r","g","b","SelectedLanguage","language","lang","filter","langId","getLanguageDetail","langName","maxWidth","DownOutlined","onLocaleChange","configDisplay","languageOption","i","CheckOutlined","overlay","trigger","href","e","preventDefault","GlobalOutlined","colorOptions","ListOption","name","selector","disabled","vertical","mapDispatchToProps","onNavTypeChange","onNavStyleChange","onTopNavColorChange","onHeaderNavColorChange","onSwitchTheme","configState","isCollapse","useThemeSwitcher","switcher","themes","hex","rgbaToHex","Group","size","target","Button","checked","isChecked","changedTheme","text","JSON","stringify","onCopy","success","CopyOutlined","block","NavPanel","showDrawer","setState","optionList","getOptionList","navigationTree","optionTree","navItem","getCategoryIcon","category","AppstoreOutlined","AntDesignOutlined","SearchInput","active","close","setValue","options","setOptions","inputRef","useRef","current","focus","ref","dropdownClassName","onSelect","onSearch","searchText","item","label","filterOption","inputValue","option","toUpperCase","indexOf","placeholder","prefix","SearchOutlined","CloseOutlined","Header","searchActive","setSearchActive","onSearchClose","navMode","MenuUnfoldOutlined","MenuFoldOutlined","breadcrumbData","forEach","assignBreadcrumb","obj","BreadcrumbRoute","withRouter","pathSnippets","location","pathname","buildBreadcrumb","_","url","slice","join","AppBreadcrumb","PageHeader","display","Footer","Date","getFullYear","AppViews","fallback","component","lazy","exact","from","memo","Content","AppLayout","currentRouteInfo","getRouteInfo","isNavSide","status","paddingLeft","AuthLayout","AuthViews","EnLang","antd","antdEnUS","messages","enMsg","ZhLang","antdZhCn","zhMsg","FrLang","antdFrFR","frMsg","AppLocale","en","enLang","zh","zhLang","fr","frLang","ja","antdJaJP","jaMsg","currentAppLocale","dark","process","light","App","themeMap","defaultTheme","insertionPoint","Views","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","Utils","initials","shift","pop","navTree","route","p","hasOwnProperty","cutHex","h","charAt","substring","parseInt","hexToG","hexToB","percent","R","G","B","RR","GG","BB","trim","str","replace","inParts","parseFloat","toFixed","outParts","Math","round","part","number","positive","negative","toLowerCase","list","input","screens","breakpoints","hideAuthMessage","showLoading"],"mappings":"6GAGMA,G,KAAO,SAAAC,GAAU,IACdC,EAA+ED,EAA/EC,SAAUC,EAAqEF,EAArEE,UAAWC,EAA0DH,EAA1DG,WAAYC,EAA8CJ,EAA9CI,eAAgBC,EAA8BL,EAA9BK,WAAYC,EAAkBN,EAAlBM,cAErE,OACC,qBAAKJ,UAAS,UAFiBG,EAAa,SAAW,YAEzC,YAA4BH,EAA5B,YAAyCI,EAAe,QAAUA,EAAgB,GAAlF,YAAwFH,EAAY,eAAiBA,EAAY,GAAjI,YAAuIC,EAAgB,mBAAqBA,EAAgB,IAA1M,SACEH,MAaJF,EAAKQ,aAAe,CACnBF,YAAY,EACZC,cAAe,MACfJ,UAAW,IAIGH,O,sNCzBFS,EAAW,SACXC,ECAA,CACXC,iBAAkB,wBDDYA,iBACnBC,EAAkB,OAClBC,EAAmB,QAEnBC,EAAe,CAC3BC,cAAc,EACdC,aAAcC,IACdC,OAAQ,KACRC,QAASC,IACTC,YAAa,UACbC,eAAgB,GAChBC,WAAW,EACXC,aAAc,U,iCEhBf,oEAAO,IAAMC,EAAY,YACZC,EAAoB,qB,4kuBCDjC,4dAAO,IAAMC,EAAS,SACTC,EAAgB,gBAChBC,EAAU,UACVC,EAAkB,kBAClBC,EAAS,SACTC,EAAiB,iBACjBC,EAAoB,oBACpBC,EAAoB,oBACpBC,EAAe,eACfC,EAAa,aACbC,EAAqB,qBACrBC,EAAmC,mCACnCC,EAAuB,uBACvBC,EAAqC,sC,gCCblD,8OAAO,IAAMC,EAAa,GACbC,EAAiB,IACjBC,EAA2B,GAC3B1B,EAAiB,iBACjB2B,EAAgB,gBAChBxB,EAAgB,OAChByB,EAAe,O,0ICMtBC,EAAY,CAChBC,SAAS,EACTC,QAAS,GACTC,aAAa,EACbC,SAAU,GACVC,MAAOC,aAAaC,QAAQjB,MAiEfkB,EA9DF,WAAgC,IAA/BC,EAA8B,uDAAtBT,EAAWU,EAAW,uCAC3C,OAAQA,EAAOC,MACd,KAAK7B,IACJ,OAAO,2BACH2B,GADJ,IAECR,SAAS,EACTG,SAAU,IACVC,MAAOK,EAAOL,QAEhB,KAAKlB,IACJ,OAAO,2BACHsB,GADJ,IAECP,QAASQ,EAAOR,QAChBC,aAAa,EACbF,SAAS,IAEX,KAAKb,IACJ,OAAO,2BACHqB,GADJ,IAECP,QAAS,GACTC,aAAa,IAEf,KAAKnB,IACJ,OAAO,2BACHyB,GADJ,IAECJ,MAAO,KACPD,SAAU,IACVH,SAAS,IAGX,KAAKf,IACJ,OAAO,2BACFuB,GADL,IAEER,SAAS,EACTI,MAAOK,EAAOL,QAGjB,KAAKhB,IACJ,OAAO,2BACHoB,GADJ,IAECR,SAAS,IAGX,KAAKT,IAOL,KAAKE,IACJ,OAAO,2BACHe,GADJ,IAECR,SAAS,EACTI,MAAOK,EAAOL,QAGhB,QACC,OAAOI,IC9EGG,EAAuB,uBACvBC,EAAgB,gBAChBC,EAAwB,wBACxBC,EAAkB,kBAClBC,EAAuB,uBACvBC,EAA0B,0BAC1BC,EAAoB,oBACpBC,EAAe,e,QCKtBC,EAAS,eACVpD,KAkDUqD,EA/CD,WAAgC,IAA/BZ,EAA8B,uDAAtBW,EAAWV,EAAW,uCAC3C,OAAQA,EAAOC,MACb,KAAKC,EACH,OAAO,2BACFH,GADL,IAEExC,aAAcyC,EAAOzC,eAEzB,KAAK6C,EACH,OAAO,2BACFL,GADL,IAEEvC,aAAcwC,EAAOxC,eAEzB,KAAK2C,EACH,OAAO,2BACFJ,GADL,IAEErC,OAAQsC,EAAOtC,SAEnB,KAAK2C,EACH,OAAO,2BACFN,GADL,IAEEpC,QAASqC,EAAOrC,UAEpB,KAAK2C,EACH,OAAO,2BACFP,GADL,IAEElC,YAAamC,EAAOnC,cAExB,KAAK0C,EACH,OAAO,2BACFR,GADL,IAEEjC,eAAgBkC,EAAOlC,iBAE3B,KAAK0C,EACH,OAAO,2BACFT,GADL,IAEEhC,UAAWiC,EAAOjC,YAEtB,KAAK0C,EACH,OAAO,2BACFV,GADL,IAEE/B,aAAcgC,EAAOhC,eAEzB,QACE,OAAO+B,I,SC7CEa,EAZD,WAAyB,IAAxBb,EAAuB,uDAAf,GAAIC,EAAW,uCAClC,OAAQA,EAAOC,MACX,KAAKhC,IACD,OAAO,2BAAK8B,GAAZ,IAAmBc,UAAWb,EAAOY,QAEzC,KAAK1C,IACD,OAAO,2BAAK6B,GAAZ,IAAmBe,aAAcd,EAAOe,OAE5C,QACI,OAAOhB,I,iBCDbiB,EAAe,CACjBC,aAAc,GACdC,eAAgB,GAChBC,aAAc,GACdC,aAAc,IAsCHC,EAnCG,WAAmC,IAAlCtB,EAAiC,uDAAzBiB,EAAchB,EAAW,uCAChD,OAAQA,EAAOC,MACX,KAAKqB,IACD,OAAO,2BAAKvB,GAAZ,IAAmBkB,aAAa,GAAD,mBAAMlB,EAAMkB,cAAZ,YAA6BjB,EAAOuB,aAEvE,KAAKC,IACD,OAAO,2BAAKzB,GAAZ,IAAmBmB,eAAgBlB,EAAOyB,UAE9C,KAAKC,IACD,OAAO,2BAAK3B,GAAZ,IAAmBoB,aAAcnB,EAAO2B,OAE5C,KAAKC,IACD,OAAO,2BAAK7B,GAAZ,IAAmBqB,aAAa,GAAD,mBAAMrB,EAAMqB,cAAZ,YAA6BpB,EAAOyB,YAEvE,KAAKI,IACD,OAAO,2BAAK9B,GAAZ,IAAmBqB,aAAc,KAErC,KAAKU,IAED,OADAC,QAAQC,IAAIhC,GACL,2BACAD,GADP,IAEIqB,aAAcrB,EAAMqB,aAAaa,KAAI,SAAAC,GAAE,OACnCA,EAAGC,KAAOnC,EAAOoC,QAAQD,GAAzB,2BACWD,GADX,IACeG,MAAO,CAAEC,EAAGtC,EAAOoC,QAAQC,MAAMC,EAAGC,EAAGvC,EAAOoC,QAAQC,MAAME,KACrEL,OAIlB,KAAKM,IACD,OAAOxB,EAEX,QACI,OAAOjB,ICpCJ0C,EAPEC,YAAgB,CAC7B/B,MAAOgC,EACP7C,KAAM8C,EACNhC,MAAOiC,EACPC,UAAWzB,I,0DCCA0B,G,cAXQ,CACrBC,OAAQ,0CACRC,WAAY,yBACZC,YAAa,gCACbC,UAAW,SACXC,cAAe,qBACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBCHjBC,IAASC,cAAcC,GAGZF,IAASG,YAApB,IACM7D,EAAO0D,IAAS1D,OAEhB8D,GADc9D,EAAK+D,YACE,IAAIL,IAAS1D,KAAKgE,oBACvCC,EAAuB,IAAIP,IAAS1D,KAAKkE,qBCVzCC,GDWsB,IAAIT,IAAS1D,KAAKoE,oBACnB,IAAIV,IAAS1D,KAAKqE,mBCZrB,IAExBF,EAAgBG,mBAAhB,uCAAqC,WAAOC,EAAOC,GAAd,SAAAC,EAAA,sEAC9BzE,EAAK0E,2BAA2BH,EAAOC,GAAUG,MAAK,SAAA1D,GAAI,OAAIA,KAAM2D,OAAM,SAAAC,GAAG,OAAIA,KADnD,mFAArC,wDAGAV,EAAgBG,mBAAhB,uCAAqC,WAAOC,EAAOC,GAAd,SAAAC,EAAA,sEAC7BzE,EAAK0E,2BAA2BH,EAAOC,GAAUG,MAAK,SAAA1D,GAAI,OAAIA,KAAM2D,OAAM,SAAAC,GAAG,OAAIA,KADpD,mFAArC,wDAGAV,EAAgBW,eAAhB,sBAAiC,sBAAAL,EAAA,sEAC1BzE,EAAK+E,UAAUJ,MAAK,SAAA1D,GAAI,OAAIA,KAAM2D,OAAM,SAAAC,GAAG,OAAIA,KADrB,mFAGjCV,EAAgBa,oBAAhB,sBAAsC,sBAAAP,EAAA,sEAC9BzE,EAAKiF,gBAAgBnB,GAAoBa,MAAK,SAAA1D,GAAI,OAAIA,KAAM2D,OAAM,SAAAC,GAAG,OAAIA,KAD3C,mFAGtCV,EAAgBe,sBAAhB,sBAAwC,sBAAAT,EAAA,sEAChCzE,EAAKiF,gBAAgBhB,GAAsBU,MAAK,SAAA1D,GAAI,OAAIA,KAAM2D,OAAM,SAAAC,GAAG,OAAIA,KAD3C,mFAGxCV,EAAgBgB,mBAAhB,uCAAqC,WAAOZ,EAAOC,GAAd,SAAAC,EAAA,sEAC9BzE,EAAKoF,+BAA+Bb,EAAOC,GAAUG,MAAK,SAAA1D,GAAI,OAAIA,KAAM2D,OAAM,SAAAC,GAAG,OAAIA,KADvD,mFAArC,wDAGeV,Q,WCFEkB,G,WAiBAN,G,WAgBAO,G,WAkBAC,I,WAgBAC,I,WAgBQC,IAnFlB,SAAUJ,IAAV,iEACL,OADK,SACCK,YAAUrH,IAAD,UAAS,2FAGV,OAHsBiE,EAAZ,EAAYA,QAC7BiC,EAAmBjC,EAAnBiC,MAAOC,EAAYlC,EAAZkC,SADU,kBAGJmB,YAAKxB,EAAgBG,mBAAoBC,EAAOC,GAH5C,YAGjBvD,EAHiB,QAIdvB,QAJc,iBAKtB,OALsB,SAKhBkG,YAAIC,YAAgB5E,EAAKvB,UALT,+BAQtB,OADAI,aAAagG,QAAQhH,IAAYmC,EAAKA,KAAK8E,KAPrB,UAQhBH,YAAII,YAAc/E,EAAKA,KAAK8E,MARZ,gCAWvB,OAXuB,oCAWjBH,YAAIC,YAAgB,EAAD,KAXF,0DADnB,uCAiBA,SAAUd,IAAV,iEACL,OADK,SACCW,YAAUnH,IAAD,UAAU,oFAEJ,OAFI,kBAEEoH,YAAKxB,EAAgBW,gBAFvB,eAGJmB,KADdC,EAFkB,yBAKvB,OADApG,aAAaqG,WAAWrH,KAJD,SAKjB8G,YAAIQ,YAAeF,IALF,+BAOvB,OAPuB,UAOjBN,YAAIC,YAAgBK,EAAYxG,UAPf,gCAUxB,OAVwB,oCAUlBkG,YAAIC,YAAgB,EAAD,KAVD,0DADpB,uCAgBA,SAAUP,IAAV,iEACL,OADK,SACCI,YAAUjH,IAAD,UAAS,2FAGV,OAHsB6D,EAAZ,EAAYA,QAC7BiC,EAAmBjC,EAAnBiC,MAAOC,EAAYlC,EAAZkC,SADU,kBAGJmB,YAAKxB,EAAgBgB,mBAAoBZ,EAAOC,GAH5C,YAGjBvD,EAHiB,QAIdvB,QAJc,iBAKtB,OALsB,SAKhBkG,YAAIC,YAAgB5E,EAAKvB,UALT,+BAQtB,OADAI,aAAagG,QAAQhH,IAAYmC,EAAKA,KAAK8E,KAPrB,UAQhBH,YAAIS,YAAcpF,EAAKA,KAAK8E,MARZ,gCAWvB,OAXuB,oCAWjBH,YAAIC,YAAgB,EAAD,KAXF,0DADnB,uCAkBA,SAAUN,KAAV,iEACL,OADK,SACCG,YAAU3G,IAAD,UAAqB,oFAEtB,OAFsB,kBAEhB4G,YAAKxB,EAAgBa,qBAFL,YAE7B/D,EAF6B,QAG1BvB,QAH0B,gBAIlC,OAJkC,SAI5BkG,YAAIC,YAAgB5E,EAAKvB,UAJG,8BAOlC,OADAI,aAAagG,QAAQhH,IAAYmC,EAAKA,KAAK8E,KANT,UAO5BH,YAAIU,YAA8BrF,EAAKA,KAAK8E,MAPhB,gCAUnC,OAVmC,oCAU7BH,YAAIC,YAAgB,EAAD,KAVU,0DAD/B,uCAgBA,SAAUL,KAAV,iEACL,OADK,SACCE,YAAUzG,IAAD,UAAuB,oFAExB,OAFwB,kBAElB0G,YAAKxB,EAAgBe,uBAFH,YAE/BjE,EAF+B,QAG5BvB,QAH4B,gBAIpC,OAJoC,SAI9BkG,YAAIC,YAAgB5E,EAAKvB,UAJK,8BAOpC,OADAI,aAAagG,QAAQhH,IAAYmC,EAAKA,KAAK8E,KANP,UAO9BH,YAAIW,YAAgCtF,EAAKA,KAAK8E,MAPhB,gCAUrC,OAVqC,oCAU/BH,YAAIC,YAAgB,EAAD,KAVY,0DADjC,uCAgBQ,SAAUJ,KAAV,iEACb,OADa,SACPe,YAAI,CACVC,YAAKpB,GACLoB,YAAK1B,GACL0B,YAAKnB,GACLmB,YAAKlB,IACLkB,YAAKjB,MANQ,uC,gBCpGUC,IAAV,SAAUA,GAASiB,GAAnB,iEACb,OADa,SACPF,YAAI,CACR1D,OAFW,wC,cCGT6D,GAAiBC,cAEjBC,GAAc,CAACF,GAAgBG,MAsBrC,IAEeC,GAtBf,SAAwBC,GACpB,IAAMC,EAAmBC,OAAOC,sCAAwCC,IAClEL,EAAQM,YACV1E,EACAqE,EACAC,EAAiBK,IAAe,WAAf,EAAmBT,MAYxC,OATAF,GAAeY,IAAI9B,IASZsB,EAGGS,G,uFC1BCC,iBADK,SAAA9K,GAAK,OAAI,cAAC,KAAD,eAAsBA,MACZ,CACrC+K,SAAS,I,sCCMIC,GATf,2KACW,IAAD,EACqBC,KAAKjL,MAA1BwD,EADA,EACAA,KAAMtD,EADN,EACMA,UACd,OACC,mCAAGgL,IAAMC,cAAc3H,EAAM,CAAEtD,UAAWA,UAJ7C,GAA0BkL,a,kICepBC,GAAc,CAChB,CACIC,IAAK,OACLC,KAAK,GAAD,OAAK5K,IAAL,SACJ6K,MAAO,mDACPC,KAAM,GACNC,YAAY,EACZC,QAAS,CACL,CACIL,IAAK,kBACLC,KAAK,GAAD,OAAK5K,IAAL,oBACJ6K,MAAO,6CACPC,KAAMG,KACNF,YAAY,EACZC,QAAS,IAEb,CACIL,IAAK,iBACLC,KAAK,GAAD,OAAK5K,IAAL,mBACJ6K,MAAO,qEACPC,KAAMI,KACNH,YAAY,EACZC,QAAS,IAEb,CACIL,IAAK,eACLC,KAAK,GAAD,OAAK5K,IAAL,iBACJ6K,MAAO,6CACPC,KAAMK,KACNJ,YAAY,EACZC,QAAS,CACL,CACIL,IAAK,qBACLC,KAAK,GAAD,OAAK5K,IAAL,uBACJ6K,MAAO,uCACPC,KAAM,GACNC,YAAY,EACZC,QAAS,IAEb,CACIL,IAAK,+BACLC,KAAK,GAAD,OAAK5K,IAAL,iCACJ6K,MAAO,yDACPC,KAAM,GACNC,YAAY,EACZC,QAAS,IAEb,CACIL,IAAK,2BACLC,KAAK,GAAD,OAAK5K,IAAL,6BACJ6K,MAAO,yDACPC,KAAM,GACNC,YAAY,EACZC,QAAS,IAEb,CACIL,IAAK,qBACLC,KAAK,GAAD,OAAK5K,IAAL,4BACJ6K,MAAO,iCACPC,KAAM,GACNC,YAAY,EACZC,QAAS,MAKrB,CACIL,IAAK,cACLC,KAAK,GAAD,OAAK5K,IAAL,gBACJ6K,MAAO,uCACPC,KAAMM,KACNL,YAAY,EACZC,QAAS,IAEb,CACIL,IAAK,eACLC,KAAK,GAAD,OAAK5K,IAAL,iBACJ6K,MAAO,6CACPC,KAAMO,KACNN,YAAY,EACZC,QAAS,CACL,CACIL,IAAK,oBACLC,KAAK,GAAD,OAAK5K,IAAL,sBACJ6K,MAAO,wFACPC,KAAM,GACNC,YAAY,EACZC,QAAS,IAEb,CACIL,IAAK,sBACLC,KAAK,GAAD,OAAK5K,IAAL,wBACJ6K,MAAO,wFACPC,KAAM,GACNC,YAAY,EACZC,QAAS,MAIrB,CACIL,IAAK,eACLC,KAAK,GAAD,OAAK5K,IAAL,iBACJ6K,MAAO,uCACPC,KAAMQ,KACNP,YAAY,EACZC,QAAS,IAEb,CACIL,IAAK,aACLC,KAAK,GAAD,OAAK5K,IAAL,eACJ6K,MAAO,yDACPC,KAAMS,KACNR,YAAY,EACZC,QAAS,IAEb,CACIL,IAAK,aACLC,KAAK,GAAD,OAAK5K,IAAL,eACJ6K,MAAO,4EACPC,KAAMU,KACNT,YAAY,EACZC,QAAS,CACL,CACIL,IAAK,qBACLC,KAAK,GAAD,OAAK5K,IAAL,uBACJ6K,MAAO,uCACPC,KAAM,GACNC,YAAY,EACZC,QAAS,IAEb,CACIL,IAAK,mBACLC,KAAK,GAAD,OAAK5K,IAAL,qBACJ6K,MAAO,6CACPC,KAAM,GACNC,YAAY,EACZC,QAAS,MAIrB,CACIL,IAAK,aACLC,KAAK,GAAD,OAAK5K,IAAL,eACJ6K,MAAO,+DACPC,KAAMW,KACNV,YAAY,EACZC,QAAS,IAEb,CACIL,IAAK,mBACLC,KAAK,GAAD,OAAK5K,IAAL,qBACJ6K,MAAO,mDACPC,KAAMY,KACNX,YAAY,EACZC,QAAS,OAKnBW,GAAgB,CAClB,CACIhB,IAAK,SACLC,KAAK,GAAD,OAAK5K,IAAL,WACJ6K,MAAO,yDACPC,KAAM,GACNC,YAAY,EACZC,QAAS,CACL,CACIL,IAAK,WACLC,KAAK,GAAD,OAAK5K,IAAL,oBACJ6K,MAAO,yDACPC,KAAMc,KACNb,YAAY,EACZC,QAAS,IAEb,CACIL,IAAK,SACLC,KAAK,GAAD,OAAK5K,IAAL,kBACJ6K,MAAO,sHACPC,KAAMe,KACNd,YAAY,EACZC,QAAS,IAEb,CACIL,IAAK,OACLC,KAAK,GAAD,OAAK5K,IAAL,gBACJ6K,MAAO,2BACPC,KAAMgB,KACNf,YAAY,EACZC,QAAS,OAQVe,GAFO,UAAOrB,GAAgBiB,I,SCzMtC,SAASK,GAAmB7L,GACjC,MAAO,CACL0C,KAAMC,EACN3C,gBAuCG,SAAS8L,GAAkBtL,GAChC,MAAO,CACLkC,KAAMO,EACNzC,a,IC7CIuL,GAAYC,KAAZD,QACAE,GAAkBC,KAAlBD,cAEFE,GAAY,SAACC,EAAYC,GAAb,OACdD,EAAa,cAAC,GAAD,CAAaxH,GAAIyH,IAAgBA,EAAUC,YAEtDC,GAAiB,SAAA/B,GACnB,IAAIgC,EAAU,GACVC,EAAY,GAChB,GAAIjC,EAEA,IADA,IAAMkC,EAAMlC,EAAImC,MAAM,KACbC,EAAQ,EAAGA,EAAQF,EAAIG,OAAQD,IAAS,CAC7C,IAAME,EAAMJ,EAAIE,GACDH,EAAL,IAAVG,EAA2BE,EAAiB,UAAML,EAAN,YAAmBK,GAC/DN,EAAQO,KAAKN,GAGrB,OAAOD,GAGLQ,GAAiB,SAAA9N,GAAU,IACrBe,EAA6Ef,EAA7Ee,aAAcgN,EAA+D/N,EAA/D+N,UAAWC,EAAoDhO,EAApDgO,eAAgBC,EAAoCjO,EAApCiO,aAAcrB,EAAsB5M,EAAtB4M,kBACzDsB,GAAYC,KAAMC,cAAcrB,MAAiBsB,SAAS,MAC1DC,EAAiB,WACfJ,GACAtB,GAAkB,IAG1B,OACI,cAAC,KAAD,CACI1I,MAAOnD,IAAiBC,KAAiB,QAAU,OACnDuN,KAAK,SACLC,MAAO,CAAEC,OAAQ,OAAQC,YAAa,GACtCC,oBAAqB,QAACZ,QAAD,IAACA,OAAD,EAACA,EAAWzC,KACjCsD,gBAAiBvB,GAAc,OAACU,QAAD,IAACA,OAAD,EAACA,EAAWzC,KAC3CpL,UAAW8N,EAAiB,mBAAqB,GANrD,SAOKtB,GAAiBlH,KAAI,SAAAqJ,GAAI,OACtBA,EAAKlD,QAAQgC,OAAS,EAClB,cAAC,KAAKmB,UAAN,CAEItD,MAAOyB,GAAUgB,EAAcY,EAAKrD,OAFxC,SAGKqD,EAAKlD,QAAQnG,KAAI,SAAAuJ,GAAY,OAC1BA,EAAapD,QAAQgC,OAAS,EAC1B,cAACd,GAAD,CACIpB,KACIsD,EAAatD,KACT,cAAC,GAAD,CAAMjI,KAAI,OAAEuL,QAAF,IAAEA,OAAF,EAAEA,EAActD,OAC1B,KAGRD,MAAOyB,GAAUgB,EAAcc,EAAavD,OAPhD,SAQKuD,EAAapD,QAAQnG,KAAI,SAAAwJ,GAAa,OACnC,eAAC,KAAKC,KAAN,WACKD,EAAcvD,KACX,cAAC,GAAD,CAAMjI,KAAI,OAAEwL,QAAF,IAAEA,OAAF,EAAEA,EAAevD,OAC3B,KACJ,+BACKwB,GAAUgB,EAAce,EAAcxD,SAE3C,cAAC,KAAD,CACI0D,QAAS,kBAAMZ,KACfa,GAAIH,EAAczD,SATVyD,EAAc1D,SAH7ByD,EAAazD,KAkBtB,eAAC,KAAK2D,KAAN,WACKF,EAAatD,KAAO,cAAC,GAAD,CAAMjI,KAAMuL,EAAatD,OAAW,KACzD,+BAAOwB,GAAUgB,EAAcc,EAAavD,SAC5C,cAAC,KAAD,CACI0D,QAAS,kBAAMZ,KACfa,GAAIJ,EAAaxD,SALTwD,EAAazD,SA5BhCuD,EAAKvD,KAwCd,eAAC,KAAK2D,KAAN,WACKJ,EAAKpD,KAAO,cAAC,GAAD,CAAMjI,KAAI,OAAEqL,QAAF,IAAEA,OAAF,EAAEA,EAAMpD,OAAW,KAC1C,+BAAOwB,GAAUgB,EAAD,OAAeY,QAAf,IAAeA,OAAf,EAAeA,EAAMrD,SACpCqD,EAAKtD,KACF,cAAC,KAAD,CACI2D,QAAS,kBAAMZ,KACfa,GAAIN,EAAKtD,OAEb,OARQsD,EAAKvD,WAgBnC8D,GAAgB,SAAApP,GAAU,IACpBoB,EAA8BpB,EAA9BoB,YAAa6M,EAAiBjO,EAAjBiO,aACrB,OACI,cAAC,KAAD,CACIM,KAAK,aACLC,MAAO,CAAEa,gBAAiBjO,GAF9B,SAGKsL,GAAiBlH,KAAI,SAAAqJ,GAAI,OACtBA,EAAKlD,QAAQgC,OAAS,EAClB,cAACd,GAAD,CAEIyC,eAAe,eACf9D,MACI,iCACKqD,EAAKpD,KAAO,cAAC,GAAD,CAAMjI,KAAI,OAAEqL,QAAF,IAAEA,OAAF,EAAEA,EAAMpD,OAAW,KAC1C,+BAAOwB,GAAUgB,EAAcY,EAAKrD,YANhD,SASKqD,EAAKlD,QAAQnG,KAAI,SAAAuJ,GAAY,OAC1BA,EAAapD,QAAQgC,OAAS,EAC1B,cAACd,GAAD,CAEIpB,KACIsD,EAAatD,KACT,cAAC,GAAD,CAAMjI,KAAI,OAAEuL,QAAF,IAAEA,OAAF,EAAEA,EAActD,OAC1B,KAERD,MAAOyB,GAAUgB,EAAcc,EAAavD,OAPhD,SAQKuD,EAAapD,QAAQnG,KAAI,SAAAwJ,GAAa,OACnC,eAAC,KAAKC,KAAN,WACI,+BACKhC,GAAUgB,EAAce,EAAcxD,SAE3C,cAAC,KAAD,CAAM2D,GAAIH,EAAczD,SAJZyD,EAAc1D,SAR7ByD,EAAazD,KAiBtB,eAAC,KAAK2D,KAAN,WACKF,EAAatD,KAAO,cAAC,GAAD,CAAMjI,KAAI,OAAEuL,QAAF,IAAEA,OAAF,EAAEA,EAActD,OAAW,KAC1D,+BAAOwB,GAAUgB,EAAcc,EAAavD,SAC5C,cAAC,KAAD,CAAM2D,GAAIJ,EAAaxD,SAHXwD,EAAazD,SA5BhCuD,EAAKvD,KAqCd,eAAC,KAAK2D,KAAN,WACKJ,EAAKpD,KAAO,cAAC,GAAD,CAAMjI,KAAI,OAAEqL,QAAF,IAAEA,OAAF,EAAEA,EAAMpD,OAAW,KAC1C,+BAAOwB,GAAUgB,EAAD,OAAeY,QAAf,IAAeA,OAAf,EAAeA,EAAMrD,SACpCqD,EAAKtD,KAAO,cAAC,KAAD,CAAM4D,GAAIN,EAAKtD,OAAW,OAH3BsD,EAAKvD,WAwB1BiE,gBALS,SAAC,GAAe,IAAbrL,EAAY,EAAZA,MAEvB,MAAO,CAAEnD,aAD6BmD,EAA9BnD,aACeK,YADe8C,EAAhB9C,eAIc,CAAEwL,sBAA3B2C,EAbK,SAAAvP,GAChB,OAAOA,EAAMwD,OAASrC,KAClB,cAAC,GAAD,eAAoBnB,IAEpB,cAAC,GAAD,eAAmBA,OChKnBwP,GAAUC,KAAVD,MAyBOD,gBALS,SAAC,GAAe,IAAbrL,EAAY,EAAZA,MAEzB,MAAO,CAAEpD,aAD+BoD,EAAhCpD,aACeC,aADiBmD,EAAlBnD,gBAITwO,EAvBQ,SAAC,GAAmF,IAAlFzO,EAAiF,EAAjFA,aAAcC,EAAmE,EAAnEA,aAAcgN,EAAqD,EAArDA,UAAWC,EAA0C,EAA1CA,eAA0C,IAA1BC,aACxEjO,EAAQ,CAAEe,eAAcgN,YAAYC,iBAAgBC,kBAD8C,UAExG,OACE,cAACuB,GAAD,CACEtP,UAAS,mBAAca,IAAiB4B,KAAe,gBAAkB,IACzE+M,MAAOjN,KACPkN,UAAW7O,EAHb,SAKE,cAAC,cAAD,CAAY8O,UAAQ,EAApB,SACE,cAAC,GAAD,aACEpM,KAAMrC,MACFnB,WCKCuP,gBALS,SAAC,GAEvB,MAAO,CAAEnO,YAF4B,EAAZ8C,MACjB9C,eAIKmO,EAnBO,SAAC,GAAwC,IAAvCnO,EAAsC,EAAtCA,YAAsC,IAAzB6M,aAC9BjO,EAAQ,CAAEoB,cAAa6M,kBADgC,UAE7D,OACC,qBAAK/N,UAAS,kBAAaiO,KAAM0B,iBAAiBzO,IAAgBoN,MAAO,CAACa,gBAAiBjO,GAA3F,SACC,qBAAKlB,UAAU,kBAAf,SACC,cAAC,GAAD,aACCsD,KAAMZ,MACF5C,W,mBCRHgL,GAAO,cAAC8E,GAAA,EAAD,CAAiBtB,MAAO,CAAEuB,SAAU,IAAMC,MAAI,IAErDC,GAAU,SAACjQ,GAAW,IACnBkQ,EAAiBlQ,EAAjBkQ,MAAOC,EAAUnQ,EAAVmQ,MACf,OACC,qBAAKjQ,UAAS,uBAAkBgQ,EAAlB,kBAAiCC,GAA/C,SACC,cAAC,KAAD,CAAMC,UAAWpF,QAUpBiF,GAAQ1P,aAAe,CACtB2P,MAAO,SACPC,MAAO,UAGOF,U,UCnBPlD,GAAkBC,KAAlBD,cAEFsD,GAAqB,SAACrQ,EAAOkO,GAAc,IACvCpN,EAA0Bd,EAA1Bc,aACFwP,EAD4BtQ,EAAZkB,UACO0B,KAC7B,OAAGsL,IAAalO,EAAMuQ,WACb,EAEND,EACM,OAGD,GAAN,OADCxP,EACS4B,KAEAD,KAFV,OAME+N,GAAU,SAACxQ,GAAW,IAClBc,EAA2Bd,EAA3Bc,aACR,MAAgB,UADmBd,EAAbyQ,SAEjB3P,EACM,yBAEF,sBAGLA,EACK,mBAEF,iBAGH4P,GAAiB,SAACxC,EAAUqC,GAChC,OAAGrC,IAAaqC,EACP,SAEA,QAoBIhB,gBALS,SAAC,GAAe,IAAbrL,EAAY,EAAZA,MAEzB,MAAO,CAAEpD,aAD0BoD,EAA3BpD,aACeI,QADYgD,EAAbhD,WAITqO,EAhBK,SAACvP,GACnB,IAAMkO,GAAYC,KAAMC,cAAcrB,MAAiBsB,SAAS,MAChE,OACE,qBACEnO,UAAWwQ,GAAexC,EAAUlO,EAAMuQ,YAC1C/B,MAAO,CAACkB,MAAM,GAAD,OAAKW,GAAmBrQ,EAAOkO,KAF9C,SAGE,qBAAKyC,IAAKH,GAAQxQ,GAAQ4Q,IAAG,UAAKpQ,IAAL,gB,oBCCpB+O,gBALS,SAAC,GAAe,IAAbrL,EAAY,EAAZA,MAEzB,MAAO,CAAEpD,aADyCoD,EAA1CpD,aACeC,aAD2BmD,EAA5BnD,aACeO,UADa4C,EAAd5C,aAIE,CAAEsL,sBAA3B2C,EA5CU,SAAC,GAOnB,IANLxO,EAMI,EANJA,aACAO,EAKI,EALJA,UACAsL,EAII,EAJJA,kBACAmB,EAGI,EAHJA,UACAC,EAEI,EAFJA,eAEI,IADJC,aAEMjO,EAAQ,CAAEe,eAAcgN,YAAWC,iBAAgBC,kBADrD,UAGE4C,EAAU,WACdjE,GAAkB,IAGpB,OACE,cAAC,KAAD,CACEkE,UAAU,OACVC,UAAU,EACVF,QAASA,EACTG,QAAS1P,EACT2P,UAAW,CAAEC,QAAS,GALxB,SAOE,eAACnR,GAAA,EAAD,CAAMO,cAAc,SAASJ,UAAU,QAAvC,UACE,eAACH,GAAA,EAAD,CAAMK,eAAe,UAAUD,WAAW,SAA1C,UACE,cAAC,GAAD,CAAMoQ,YAAY,IAClB,qBAAKrQ,UAAU,YAAYgP,QAAS,kBAAM2B,KAA1C,SACE,cAACM,GAAA,EAAD,SAGJ,qBAAKjR,UAAU,kBAAf,SACE,cAAC,cAAD,CAAY0P,UAAQ,EAApB,SACE,cAAC,GAAD,aAAapM,KAAMrC,MAAmBnB,gB,yFCUnCoR,GAhDK,SAAApR,GAAU,IAErBqR,EAA0BrR,EAA1BqR,YAFoB,EAEMrR,EAAbsR,aAFO,MAED,GAFC,IAIEC,oBAAS,GAJX,oBAIrBP,EAJqB,KAIZQ,EAJY,OAKUD,mBAASD,GALnB,oBAKrBG,EALqB,KAKRC,EALQ,OAMIH,mBAASD,GANb,oBAMrBK,EANqB,KAMXC,EANW,KAQ5BC,qBAAU,WACTD,EAAYN,GACZI,EAAeJ,KACb,CAACA,IAEJ,IAAMQ,EAAmB,WACxBN,GAAYR,IAWb,OACC,sBAAK9Q,UAAU,eAAf,UACC,qBAAKA,UAAU,wBAAf,SACC,qBAAKA,UAAU,QAAQsO,MAAO,CAACa,gBAAiBsC,GAAsB,WAAYzC,QAAS4C,MAG3Fd,GACC,qCACC,qBAAK9Q,UAAU,wBAAwBgP,QAAS4C,IAChD,cAAC,KAAD,CAAcR,MAAOG,EAAaM,SAjBjB,SAACC,GAAW,IAC1BC,EAAOD,EAAPC,IACDC,EAAI,cAAUD,EAAIE,EAAd,aAAoBF,EAAIG,EAAxB,aAA8BH,EAAII,EAAlC,aAAwCJ,EAAInK,EAA5C,KACV8J,EAAYM,GACZR,EAAeO,GACfZ,EAAYW,a,uECdd,IAAMM,GAAmB,SAAC,GAAgB,IAChCC,EANV,SAA2BtR,GAEvB,OADauR,GAAKC,QAAO,SAAA7E,GAAG,OAAIA,EAAI8E,SAAWzR,KACnC,GAIK0R,CADoB,EAAb1R,QAEhB2R,EAAmBL,EAAnBK,SAAUnH,EAAS8G,EAAT9G,KAClB,OACI,sBAAKvL,UAAU,4BAAf,UACI,qBACIsO,MAAO,CAAEqE,SAAU,QACnBlC,IAAG,qBAAgBlF,EAAhB,QACHmF,IAAKgC,IAET,uBAAM1S,UAAU,4BAAhB,UACK0S,EADL,IACe,cAACE,GAAA,EAAD,CAAc5S,UAAU,wBAiEpCqP,gBALS,SAAC,GAErB,MAAO,CAAEtO,OAF0B,EAAZiD,MACfjD,UAI4B,CAAE8R,eR/DnC,SAAwB9R,GAC7B,MAAO,CACLuC,KAAME,EACNzC,YQ4DWsO,EA3DY,SAAC,GAA+C,IAA7CtO,EAA4C,EAA5CA,OAAQ+R,EAAoC,EAApCA,cAAeD,EAAqB,EAArBA,eAC3CE,EACF,cAAC,KAAD,UACKT,GAAKhN,KAAI,SAACoI,EAAKsF,GACZ,OACI,cAAC,KAAKjE,KAAN,CAEI/O,UAAWe,IAAW2M,EAAI8E,OAAS,gCAAkC,GACrExD,QAAS,kBAAM6D,EAAenF,EAAI8E,SAHtC,SAII,uBAAMxS,UAAU,oDAAhB,UACI,gCACI,qBACIsO,MAAO,CAAEqE,SAAU,QACnBlC,IAAG,qBAAgB/C,EAAInC,KAApB,QACHmF,IAAKhD,EAAIgF,WAEb,sBAAM1S,UAAU,0BAAhB,SAA2C0N,EAAIgF,cAElD3R,IAAW2M,EAAI8E,OACZ,cAACS,GAAA,EAAD,CAAejT,UAAU,iBACzB,SAdHgT,QAqBzB,OACI,cAAC,KAAD,CACIpC,UAAU,cACVsC,QAASH,EACTI,QAAS,CAAC,SAHd,SAIKL,EACG,mBACIM,KAAK,KACLpT,UAAU,YACVgP,QAAS,SAAAqE,GAAC,OAAIA,EAAEC,kBAHpB,SAII,cAAC,GAAD,CAAkBvS,OAAQA,MAG9B,cAAC,KAAD,CAAMsN,KAAK,aAAX,SACI,cAAC,KAAKU,KAAN,UACI,mBACIqE,KAAK,KACLpE,QAAS,SAAAqE,GAAC,OAAIA,EAAEC,kBAFpB,SAGI,cAACC,GAAA,EAAD,CAAgBvT,UAAU,6B,UClDhDwT,GAAe,CACpB,UACA,UACA,UACA,UACA,WAGKC,GAAa,SAAC,GAAD,IAAEC,EAAF,EAAEA,KAAMC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,SAAUC,EAA5B,EAA4BA,SAA5B,OAClB,sBAAK7T,UAAS,eAAU6T,EAAU,GAAK,qDAAvC,UACC,qBAAK7T,UAAS,UAAK4T,EAAW,cAAgB,GAAhC,YAAsCC,EAAU,OAAS,IAAvE,SAA8EH,IAC9E,8BAAMC,QAyJFG,GAAqB,CAC1BrH,sBACAsH,gBT9JM,SAAyB/S,GAC9B,MAAO,CACLsC,KAAMI,EACN1C,YS4JHgT,iBT7KM,SAA0BnT,GAC/B,MAAO,CACLyC,KAAMG,EACN5C,iBS2KHoT,oBTzJM,SAA6B/S,GAClC,MAAO,CACLoC,KAAMK,EACNzC,gBSuJHgT,uBTnJM,SAAgC/S,GACrC,MAAO,CACLmC,KAAMM,EACNzC,mBSiJHgT,cTtIM,SAAuB9S,GAC5B,MAAO,CACLiC,KAAMQ,EACNzC,kBSsIWgO,gBAdS,SAAC,GAAe,IAAbrL,EAAY,EAAZA,MAEzB,MAAO,CAAEhD,QAD2FgD,EAA5FhD,QACUH,aADkFmD,EAAnFnD,aACeD,aADoEoD,EAArEpD,aACeM,YADsD8C,EAAvD9C,YACcC,eADyC6C,EAA1C7C,eACiBJ,OADyBiD,EAA1BjD,OACSM,aADiB2C,EAAlB3C,gBAa5CyS,GAAzBzE,EA9JkB,SAAC,GAc3B,IAoCsB+E,EAjD5BpT,EAaK,EAbLA,QACAH,EAYK,EAZLA,aACAD,EAWK,EAXLA,aACAM,EAUK,EAVLA,YACAC,EASK,EATLA,eACAJ,EAQK,EARLA,OACAM,EAOK,EAPLA,aACAoL,EAMK,EANLA,mBACAsH,EAKK,EALLA,gBACAC,EAIK,EAJLA,iBACAC,EAGK,EAHLA,oBACAC,EAEK,EAFLA,uBACAC,EACK,EADLA,cAEM/D,EAAWpP,IAAY0B,KACvB2R,EAAazT,EAFd,EAIwB0T,8BAArBC,EAJH,EAIGA,SAAUC,EAJb,EAIaA,OAkClB,OACC,qCACC,sBAAKxU,UAAU,OAAf,UACC,oBAAIA,UAAU,wBAAd,wBAECoQ,EACA,cAAC,GAAD,CACCsD,KAAK,iBACLG,UAAQ,EACRF,SACC,cAAC,GAAD,CAAavC,MAAOlQ,EAAaiQ,YAnCZ,SAACW,GAC3BoC,EAAuB,IADc,IAE7BnC,EAAQD,EAARC,IACFC,EAAI,eAAWD,EAAIE,EAAf,aAAqBF,EAAIG,EAAzB,aAA+BH,EAAII,EAAnC,aAAyCJ,EAAInK,EAA7C,KACJ6M,EAAMxG,KAAMyG,UAAU1C,GAC5BiC,EAAoBQ,QAkCjB,cAAC,GAAD,CACCf,KAAK,oBACLG,UAAQ,EACRF,SACC,cAAC,GAAD,CAAavC,MAAOjQ,EAAgBgQ,YApCZ,SAACW,GAAW,IACjCC,EAAQD,EAARC,IACFC,EAAI,eAAWD,EAAIE,EAAf,aAAqBF,EAAIG,EAAzB,aAA+BH,EAAII,EAAnC,aAAyCJ,EAAInK,EAA7C,KACJ6M,EAAMxG,KAAMyG,UAAU1C,GAC5BkC,EAAuBO,QAqCrB,cAAC,GAAD,CACCf,KAAK,mBACLC,SACC,eAAC,KAAMgB,MAAP,CACCC,KAAK,QACL/C,SAAU,SAAAwB,GAAC,OAvCOvB,EAuCYuB,EAAEwB,OAAO/C,MAtC5CoC,EAAuB,IACpBpC,IAAUpP,OACZuR,EAAoBT,GAAa,IACjC/G,GAAmB,SAEpBsH,EAAgBjC,GANM,IAACA,GAwClBA,MAAO9Q,EAHR,UAKC,cAAC,KAAM8T,OAAP,CAAchD,MAAO7Q,KAArB,kBACA,cAAC,KAAM6T,OAAP,CAAchD,MAAOpP,KAArB,sBAIH,cAAC,GAAD,CACCgR,KAAK,kBACLC,SACC,eAAC,KAAMgB,MAAP,CACCf,SAAUxD,EACVwE,KAAK,QACL/C,SAAU,SAAAwB,GAAC,OAAIW,EAAiBX,EAAEwB,OAAO/C,QACzCA,MAAOjR,EAJR,UAMC,cAAC,KAAMiU,OAAP,CAAchD,MAAOhR,KAArB,mBACA,cAAC,KAAMgU,OAAP,CAAchD,MAAOrP,KAArB,qBAGFmR,SAAUxD,IAEX,cAAC,GAAD,CACCsD,KAAK,qBACLC,SACC,cAAC,KAAD,CACCC,SAAUxD,EACV2E,QAASV,EACTxC,SAAU,kBAAMpF,GAAoB7L,MAGtCgT,SAAUxD,IAEX,cAAC,GAAD,CACCsD,KAAK,cACLC,SACC,cAAC,KAAD,CAAQoB,QAA0B,SAAjB1T,EAAyBwQ,SAjG3B,SAACmD,GACpBd,EAAuB,IACvB,IAAMe,EAAeD,EAAY,OAAS,QAC1Cb,EAAcc,GACZV,EAAS,CAAEvQ,MAAOwQ,EAAOS,aAiG1B,sBAAKjV,UAAU,OAAf,UACC,oBAAIA,UAAU,wBAAd,oBACA,cAAC,GAAD,CACC0T,KAAK,YACLC,SACC,cAAC,GAAD,CAAab,eAAa,SAI7B,8BACC,cAAC,KAAD,CACCoC,MAlFwBd,EAkFC,CAAEpT,UAASH,eAAcD,eAAcM,cAAaC,iBAAgBJ,SAAQM,gBAlF7D8T,KAAKC,UAAUhB,EAAa,KAAM,IAmF1EiB,OAAQ,kBAAMxS,KAAQyS,QAAQ,qFAF/B,SAIC,cAAC,KAAD,CAAQ/J,KAAM,cAACgK,GAAA,EAAD,IAAmBC,OAAK,EAAtC,SACC,4DCzKOC,GAAb,+MACCrS,MAAQ,CAAE0N,SAAS,GADpB,EAGE4E,WAAa,WACX,EAAKC,SAAS,CACZ7E,SAAS,KALf,EASEH,QAAU,WACR,EAAKgF,SAAS,CACZ7E,SAAS,KAXf,wDAgBE,OACI,qCACE,cAAC,KAAD,CAAMzC,KAAK,aAAX,SACE,cAAC,KAAKU,KAAN,CAAWC,QAASjE,KAAK2K,WAAzB,SACE,cAACrJ,GAAA,EAAD,CAAiBrM,UAAU,sBAG/B,cAAC,KAAD,CACEsL,MAAM,eACNsF,UAAU,QACVpB,MAAO,IACPmB,QAAS5F,KAAK4F,QACdG,QAAS/F,KAAK3H,MAAM0N,QALtB,SAOE,cAAC,GAAD,aA9BV,GAA8B5F,aA0CfmE,gBALS,SAAC,GAEvB,MAAO,CAAEtO,OAF4B,EAAZiD,MACjBjD,UAIKsO,CAAyBoG,I,sECtBxC,IAAMG,GAbN,SAASC,EAAeC,EAAgBC,GACvCA,EAAaA,GAA0B,GADY,qBAE5BD,GAF4B,IAEnD,2BAAwC,CAAC,IAA7BE,EAA4B,QACT,IAA3BA,EAAQvK,QAAQgC,QAClBsI,EAAWpI,KAAKqI,GAEdA,EAAQvK,QAAQgC,OAAS,GAC3BoI,EAAcG,EAAQvK,QAASsK,IAPkB,8BAUnD,OAAOA,EAGWF,CAAcrJ,IAE3ByJ,GAAkB,SAAAC,GACvB,OAAQA,GACP,IAAK,aACJ,OAAO,cAACxK,GAAA,EAAD,CAAmB1L,UAAU,iBACrC,IAAK,OACJ,OAAO,cAACmW,GAAA,EAAD,CAAkBnW,UAAU,gBACpC,IAAK,aACJ,OAAO,cAACoW,GAAA,EAAD,CAAmBpW,UAAU,iBACrC,IAAK,QACJ,OAAO,cAACuM,GAAA,EAAD,CAAkBvM,UAAU,iBACpC,QACC,OAAO,OAqEKqW,GA7CK,SAAAvW,GAAU,IACrBwW,EAAkCxW,EAAlCwW,OAAQC,EAA0BzW,EAA1ByW,MAAOvI,EAAmBlO,EAAnBkO,SAAUK,EAASvO,EAATuO,KADL,EAEFgD,mBAAS,IAFP,oBAErBS,EAFqB,KAEd0E,EAFc,OAGEnF,mBAAS,IAHX,oBAGrBoF,EAHqB,KAGZC,EAHY,KAItBC,EAAWC,iBAAO,MAuBxB,OAJGN,GAHFK,EAASE,QAAQC,QAQjB,cAAC,KAAD,CACCC,IAAKJ,EACL3W,UAAS,2BAAsBgO,EAAU,YAAc,GAA9C,YAA6D,UAATK,EAAmB,QAAU,IAC1F2I,kBAAkB,sBAClBP,QAASA,EACTQ,SA3Be,WAChBT,EAAS,IACTE,EAAW,IACRH,GACFA,KAwBAW,SApBe,SAAAC,GAChBX,EAASW,GACTT,EAAYS,EApCavB,GAAWtQ,KAAI,SAAC8R,GAC1C,IAAMlB,EAAWkB,EAAKhM,IAAImC,MAAM,KAAK,GACrC,MAAO,CACNuE,MAAOsF,EAAK/L,KACZgM,MACC,cAAC,KAAD,CAAMpI,GAAImI,EAAK/L,KAAf,SACC,sBAAKrL,UAAU,mBAAf,UACC,qBAAKA,UAAU,OAAf,SACEiW,GAAgBC,KAElB,gCACC,qBAAKlW,UAAU,uBAAf,SAAsC,cAAC,GAAD,CAAawF,GAAI4R,EAAK9L,UAC5D,sBAAKtL,UAAU,0BAAf,UAA0CkW,EAA1C,mBAwBqB,KAmBxBpE,MAAOA,EACPwF,aAAc,SAACC,EAAYC,GAAb,OACqD,IAAlEA,EAAO1F,MAAM2F,cAAcC,QAAQH,EAAWE,gBAThD,SAYC,cAAC,KAAD,CAAOE,YAAY,YAAaC,OAAQ,cAACC,GAAA,EAAD,CAAgB7X,UAAU,cC1EtDqP,gBALS,SAAC,GAEvB,MAAO,CAAElO,eAF4B,EAAZ6C,MACjB7C,kBAI8B,GAAzBkO,EArBU,SAACvP,GAAW,IAC5BwW,EAAkCxW,EAAlCwW,OAAQC,EAA0BzW,EAA1ByW,MAAOpV,EAAmBrB,EAAnBqB,eACjBkN,EAAOJ,KAAM0B,iBAAiBxO,GAEpC,OACC,sBAAKnB,UAAS,qBAAgBsW,EAAS,oBAAsB,GAA/C,YAAqDjI,GAAQC,MAAO,CAACa,gBAAiBhO,GAApG,UACC,qBAAKnB,UAAU,kCAAf,SACC,cAAC,GAAD,CAAauW,MAAOA,EAAOD,OAAQA,MAEpC,qBAAKtW,UAAU,YAAYgP,QAASuH,EAApC,SACC,cAACuB,GAAA,EAAD,YCPIC,GAAWxI,KAAXwI,OA2EO1I,gBALS,SAAC,GAAe,IAAbrL,EAAY,EAAZA,MAEzB,MAAO,CAAEpD,aADmEoD,EAApEpD,aACeI,QADqDgD,EAAtDhD,QACUG,eAD4C6C,EAA7C7C,eACiBC,UAD4B4C,EAA7B5C,UACYC,aADiB2C,EAAlB3C,gBAIpB,CAACoL,sBAAoBC,sBAA9C2C,EAzEU,SAAAvP,GAAU,IACzBc,EAAoHd,EAApHc,aAAcQ,EAAsGtB,EAAtGsB,UAAWJ,EAA2FlB,EAA3FkB,QAASG,EAAkFrB,EAAlFqB,eAAgBsL,EAAkE3M,EAAlE2M,mBAAoBC,EAA8C5M,EAA9C4M,kBAAmBsB,EAA2BlO,EAA3BkO,SAAU3M,EAAiBvB,EAAjBuB,aAD3E,EAEQgQ,oBAAS,GAFjB,oBAEzB2G,EAFyB,KAEXC,EAFW,KAI1BC,EAAgB,WACpBD,GAAgB,IAWZ7H,EAAWpP,IAAY0B,KAOvByV,EALAhX,EAGG8M,KAAM0B,iBAAiBxO,GAFrB8M,KAAM0B,iBAAkC,SAAjBtO,EAA0B,SAAW,WAsBvE,OANAsQ,qBAAU,WACJ3D,GACFkK,OAKF,cAACH,GAAD,CAAQ/X,UAAS,qBAAgBmY,GAAW7J,MAAO,CAACa,gBAAiBhO,GAArE,SACE,sBAAKnB,UAAS,6BAAwBoQ,EAAW,iBAAmB,IAApE,UACE,cAAC,GAAD,CAAMG,SAAU4H,IAChB,sBAAKnY,UAAU,MAAMsO,MAAO,CAACkB,MAAM,eAAD,OApBnCY,GAAYpC,EACN,MAGD,GAAN,OADCpN,EACS4B,KAEAD,KAFV,MAgBoC,MAAlC,UACE,qBAAKvC,UAAU,WAAf,SACE,oBAAIA,UAAU,6CAAd,SAEIoQ,IAAapC,EACb,KAEA,oBAAIhO,UAAU,yCAAyCgP,QAAS,WA3CxEhB,EAGFtB,GAAmBtL,GAFnBqL,GAAoB7L,IA0CV,SACGA,GAAgBoN,EAAW,cAACoK,GAAA,EAAD,CAAoBpY,UAAU,aAAgB,cAACqY,GAAA,EAAD,CAAkBrY,UAAU,mBAK9G,qBAAKA,UAAU,YAAf,SACE,cAAC,GAAD,MAEF,cAAC,GAAD,CAAWsW,OAAQ0B,EAAczB,MAAO2B,e,UCpE9CI,GAAiB,CACpB,OAAS,cAAC,GAAD,CAAa9S,GAAG,UAG1BgH,GAAiB+L,SAAQ,SAAC7K,EAAKsF,GAC9B,IAAMwF,EAAmB,SAACC,GAAD,OAASH,GAAeG,EAAIpN,MAAQ,cAAC,GAAD,CAAa7F,GAAIiT,EAAInN,SAClFkN,EAAiB9K,GACbA,EAAIjC,SACPiC,EAAIjC,QAAQ8M,SAAS,SAAA7K,GACpB8K,EAAiB9K,GACdA,EAAIjC,SACNiC,EAAIjC,QAAQ8M,SAAS,SAAA7K,GACpB8K,EAAiB9K,YAOtB,IAAMgL,GAAkBC,uBAAW,SAAA7Y,GAAU,IAEtC8Y,EADe9Y,EAAb+Y,SACsBC,SAASvL,MAAM,KAAKgF,QAAO,SAAAS,GAAC,OAAIA,KACxD+F,EAAkBH,EAAatT,KAAI,SAAC0T,EAAGxL,GAC1C,IAAMyL,EAAG,WAAOL,EAAaM,MAAM,EAAG1L,EAAQ,GAAG2L,KAAK,MACtD,OACE,cAAC,KAAWpK,KAAZ,UACE,cAAC,KAAD,CAAME,GAAIgK,EAAV,SAAgBX,GAAeW,MADXA,MAM1B,OACA,cAAC,KAAD,UACEF,OAaWK,GARf,2KAEE,OACC,cAACV,GAAD,QAHH,GAAmCxN,aC1BpBmO,GAdW,SAAC,GAAwB,IAAtB/N,EAAqB,EAArBA,MAC5B,OADiD,EAAdgO,QAGjC,sBAAKtZ,UAAU,kBAAf,UACC,oBAAIA,UAAU,iCAAd,SACC,cAAC,GAAD,CAAawF,GAAI8F,GAAe,WAEjC,cAAC,GAAD,OAGA,MCXW,SAASiO,KACvB,OACC,wBAAQvZ,UAAU,SAAlB,SACC,gEAA6B,IAAIwZ,MAAOC,eAAxC,IAAyD,sBAAMzZ,UAAU,uBAAhB,mBAA2CM,OAApG,6BCDI,IAAMoZ,GAAW,WACpB,OACI,cAAC,WAAD,CAAUC,SAAU,cAAC,GAAD,CAAS1J,MAAM,YAAnC,SACI,eAAC,UAAD,WACI,cAAC,SAAD,CACI5E,KAAI,UAAK5K,IAAL,SACJmZ,UAAWC,gBAAK,kBAAM,oCAE1B,cAAC,SAAD,CACIxO,KAAI,UAAK5K,IAAL,8BACJmZ,UAAWC,gBAAK,kBAAM,iEAE1B,cAAC,YAAD,CACIC,OAAK,EACLC,KAAI,UAAKtZ,KACTwO,GAAE,UAAKxO,IAAL,WAEN,cAAC,SAAD,CACIqZ,OAAK,EACLzO,KAAI,UAAK5K,IAAL,sBACJmZ,UAAWC,gBAAK,kBAAM,wEAE1B,cAAC,SAAD,CACIC,OAAK,EACLzO,KAAI,UAAK5K,IAAL,mBACJmZ,UAAWC,gBAAK,kBAAM,iEAO3B7O,OAAMgP,KAAKN,ICblBO,GAAY1K,KAAZ0K,QACApN,GAAkBC,KAAlBD,cAEKqN,GAAY,SAAC,GAAyC,IAAvCtZ,EAAsC,EAAtCA,aAAcI,EAAwB,EAAxBA,QAAS6X,EAAe,EAAfA,SAC3CsB,EAAmBlM,KAAMmM,aAAa5N,GAAkBqM,EAASC,UAEjE9K,GADUC,KAAMC,cAAcrB,MACVsB,SAAS,MAC7BkM,EAAYrZ,IAAYC,KACxBmP,EAAWpP,IAAY0B,KAU7B,MAAe,YAFI4R,8BAAXgG,OAGC,cAAC,GAAD,CAASrK,MAAM,SAItB,eAAC,KAAD,WACE,cAAC,GAAD,CAAWjC,SAAUA,IACnBoC,IAAapC,EAAY,cAAC,GAAD,CAAQH,UAAWsM,IAAsB,KACpE,eAAC,KAAD,CAAQna,UAAU,gBAAlB,UACIqa,IAAcrM,EAAY,cAAC,GAAD,CAASH,UAAWsM,IAAsB,KACtE,eAAC,KAAD,CAAQna,UAAU,aAAasO,MAAO,CAACiM,YAlBxCnK,GAAYpC,EACN,EAEFpN,EAAe4B,KAA2BD,MAe7C,UACE,sBAAKvC,UAAS,sBAAiBoQ,EAAW,iBAAmB,IAA7D,UACE,cAAC,GAAD,CAAYkJ,QAAO,OAAEa,QAAF,IAAEA,OAAF,EAAEA,EAAkB3O,WAAYF,MAAK,OAAE6O,QAAF,IAAEA,OAAF,EAAEA,EAAkB7O,QAC5E,cAAC2O,GAAD,UACE,cAAC,GAAD,SAGJ,cAACV,GAAD,UAGHvL,GAAY,cAAC,GAAD,QAUJqB,gBALS,SAAC,GAAe,IAAbrL,EAAY,EAAZA,MAEzB,MAAO,CAAEpD,aADkCoD,EAAnCpD,aACeI,QADoBgD,EAArBhD,QACUD,OADWiD,EAAZjD,UAIlBsO,CAAyBrE,IAAMgP,KAAKE,KCjDpCR,GAlBS,WACtB,OACE,cAAC,WAAD,CAAUC,SAAU,cAAC,GAAD,CAAS1J,MAAM,SAAnC,SACE,eAAC,UAAD,WACE,cAAC,SAAD,CAAO5E,KAAI,UAAK3K,IAAL,UAA+BkZ,UAAWC,gBAAK,kBAAM,+EAChE,cAAC,SAAD,CAAOxO,KAAI,UAAK3K,IAAL,YAAiCkZ,UAAWC,gBAAK,kBAAM,+EAClE,cAAC,SAAD,CAAOxO,KAAI,UAAK3K,IAAL,YAAiCkZ,UAAWC,gBAAK,kBAAM,wEAClE,cAAC,SAAD,CAAOxO,KAAI,UAAK3K,IAAL,eAAoCkZ,UAAWC,gBAAK,kBAAM,+EACrE,cAAC,SAAD,CAAOxO,KAAI,UAAK3K,IAAL,eAAoCkZ,UAAWC,gBAAK,kBAAM,wEACrE,cAAC,SAAD,CAAOxO,KAAI,UAAK3K,IAAL,oBAAyCkZ,UAAWC,gBAAK,kBAAM,iEAC1E,cAAC,SAAD,CAAOxO,KAAI,UAAK3K,IAAL,YAAiCkZ,UAAWC,gBAAK,kBAAM,mCAClE,cAAC,SAAD,CAAOxO,KAAI,UAAK3K,IAAL,YAAiCkZ,UAAWC,gBAAK,kBAAM,oCAClE,cAAC,YAAD,CAAUE,KAAI,UAAKrZ,KAAoBuO,GAAE,UAAKvO,IAAL,kBCFlC8Z,GAXW,WACzB,OACC,qBAAKxa,UAAU,iBAAf,SACC,cAAC,UAAD,UACC,cAAC,SAAD,CAAOqL,KAAK,GAAGuO,UAAWa,U,oBCEfC,GAPA,CACbC,KAAMC,KACN7Z,OAAQ,QACR8Z,SAAS,eACJC,K,oBCGQC,GAPA,CACbJ,KAAMK,KACNja,OAAQ,KACR8Z,SAAS,eACJI,K,oBCGQC,GAPA,CACbP,KAAMQ,KACNpa,OAAQ,QACR8Z,SAAS,eACJO,K,oBCKQC,GAPG,CACdC,GAAIC,GACJC,GAAIC,GACJC,GAAIC,GACJC,GCNW,CACbjB,KAAMkB,KACN9a,OAAQ,QACR8Z,SAAS,eACJiB,M,mBCiCQnD,yBAAWtJ,aANF,SAAC,GAAqB,IAAnBrL,EAAkB,EAAlBA,MAAOb,EAAW,EAAXA,KAGhC,MAAO,CAAEpC,OAFWiD,EAAZjD,OAESiC,MADCG,EAAVH,SAIgBqM,EA9BL,SAACvP,GAAW,IACvBiB,EAAqBjB,EAArBiB,OAAQ8X,EAAa/Y,EAAb+Y,SACVkD,EAAmBV,GAAUta,GACnC,OACE,cAAC,KAAD,CACEA,OAAQgb,EAAiBhb,OACzB8Z,SAAUkB,EAAiBlB,SAF7B,SAGE,cAAC,KAAD,CAAgB9Z,OAAQgb,EAAiBpB,KAAzC,SACE,eAAC,UAAD,WACE,cAAC,SAAD,CAAOb,OAAK,EAACzO,KAAK,IAAlB,SACE,cAAC,YAAD,CAAU4D,GAAIxO,QAEhB,cAAC,SAAD,CAAO4K,KAAM3K,IAAb,SACE,cAAC,GAAD,MAEF,cAAC,SAAD,CAAO2K,KAAM5K,IAAb,SACE,cAAC,GAAD,CAAWoY,SAAUA,iBCjB3BrE,GAAS,CACXwH,KAAK,GAAD,OAAKC,iBAAL,uBACJC,MAAM,GAAD,OAAKD,iBAAL,yBAyBME,OAtBf,WACI,OACI,qBAAKnc,UAAU,MAAf,SACI,cAAC,IAAD,CAAUkK,MAAOA,GAAjB,SACI,cAAC,yBAAD,CACIkS,SAAU5H,GACV6H,aAAc1b,IAAaU,aAC3Bib,eAAe,yBAHnB,SAII,cAAC,KAAD,UACI,cAAC,UAAD,UACI,cAAC,SAAD,CACIjR,KAAK,IACLuO,UAAW2C,gBCdvBC,QACW,cAA7BnS,OAAOwO,SAAS4D,UAEe,UAA7BpS,OAAOwO,SAAS4D,UAEhBpS,OAAOwO,SAAS4D,SAASC,MACvB,2D,OCZNC,IAASC,OAAO,cAAC,GAAD,IAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMnV,MAAK,SAAAoV,GACjCA,EAAaC,iB,oDEnIbC,E,4GAOiB1J,GACrB,IAAI2J,EAAW3J,EAAKgJ,MAAM,UAAY,GACtC,QAASW,EAASC,SAAW,KAAOD,EAASE,OAAS,KAAK9F,gB,mCASxC+F,EAASnS,GAC5B,GAAImS,EAAQnS,OAASA,EACnB,OAAOmS,EAET,IAAIC,EACJ,IAAK,IAAIC,KAAKF,EACZ,GAAIA,EAAQG,eAAeD,IAA4B,kBAAfF,EAAQE,KAChDD,EAAQ1S,KAAKqP,aAAaoD,EAAQE,GAAIrS,IAErC,OAAOoS,EAIV,OAAOA,I,uCAQgBhJ,GACvB,IAAIA,EACH,MAAO,OASR,SAASmJ,EAAOC,GAAI,MAAwB,MAAhBA,EAAEC,OAAO,GAAcD,EAAEE,UAAU,EAAE,GAAGF,EAEpE,OAD6B,IAJFG,SAAUJ,EAHjBnJ,GAG4BsJ,UAAU,EAAE,GAAG,IAIjB,IAH9C,SAAgBF,GAAI,OAAOG,SAAUJ,EAAOC,GAAIE,UAAU,EAAE,GAAG,IAHhDE,CAAOxJ,GAMwC,IAF9D,SAAgBoJ,GAAI,OAAOG,SAAUJ,EAAOC,GAAIE,UAAU,EAAE,GAAG,IAHjDG,CAAOzJ,IAKiD,IARpD,IAUV,OAEA,U,iCAUSrD,EAAO+M,GACxB,IAAIC,EAAIJ,SAAS5M,EAAM2M,UAAU,EAAE,GAAG,IAClCM,EAAIL,SAAS5M,EAAM2M,UAAU,EAAE,GAAG,IAClCO,EAAIN,SAAS5M,EAAM2M,UAAU,EAAE,GAAG,IACtCK,EAAIJ,SAASI,GAAK,IAAMD,GAAW,KAInCE,GAHAA,EAAIL,SAASK,GAAK,IAAMF,GAAW,MAG5B,IAAKE,EAAE,IACdC,GAHAA,EAAIN,SAASM,GAAK,IAAMH,GAAW,MAG5B,IAAKG,EAAE,IACd,IAAMC,EAAiC,KAHvCH,EAAKA,EAAE,IAAKA,EAAE,KAGClR,SAAS,IAAIO,OAAhB,WAAoC2Q,EAAElR,SAAS,KAAQkR,EAAElR,SAAS,IACxEsR,EAAiC,IAA1BH,EAAEnR,SAAS,IAAIO,OAAhB,WAAoC4Q,EAAEnR,SAAS,KAAQmR,EAAEnR,SAAS,IACxEuR,EAAiC,IAA1BH,EAAEpR,SAAS,IAAIO,OAAhB,WAAoC6Q,EAAEpR,SAAS,KAAQoR,EAAEpR,SAAS,IAC9E,MAAM,IAAN,OAAWqR,GAAX,OAAgBC,GAAhB,OAAqBC,K,gCAQLzM,GAChB,IAAM0M,EAAO,SAAAC,GAAG,OAAKA,EAAIC,QAAQ,cAAc,KACzCC,EAAU7M,EAAK+L,UAAU/L,EAAK0F,QAAQ,MAAMnK,MAAM,KACvD0E,EAAI+L,SAASU,EAAKG,EAAQ,GAAGd,UAAU,IAAK,IAC5C7L,EAAI8L,SAASU,EAAKG,EAAQ,IAAK,IAC/B1M,EAAI6L,SAASU,EAAKG,EAAQ,IAAK,IAC/BjX,EAAIkX,WAAWJ,EAAKG,EAAQ,GAAGd,UAAU,EAAGc,EAAQ,GAAGpR,OAAS,KAAKsR,QAAQ,GACvEC,EAAW,CACjB/M,EAAE/E,SAAS,IACXgF,EAAEhF,SAAS,IACXiF,EAAEjF,SAAS,IACX+R,KAAKC,MAAU,IAAJtX,GAASsF,SAAS,IAAI6Q,UAAU,EAAG,IAQ/C,OALAiB,EAASzG,SAAQ,SAAU4G,EAAMnM,GACZ,IAAhBmM,EAAK1R,SACRuR,EAAShM,GAAK,IAAMmM,MAGhB,IAAN,OAAYH,EAAS7F,KAAK,O,iCAUTiG,EAAQC,EAAUC,GACnC,OAAIF,EAAS,EACLC,EAEJD,EAAS,EACLE,EAED,O,sCAUe1X,EAAGuK,EAAG/G,GAC5B,MAAqB,kBAAXxD,EAAEwD,IAAuC,kBAAX+G,EAAE/G,GAClCxD,EAAEwD,GAAO+G,EAAE/G,GAGE,kBAAXxD,EAAEwD,IAAuC,kBAAX+G,EAAE/G,IACzCxD,EAAIA,EAAEwD,GAAKmU,gBACXpN,EAAIA,EAAE/G,GAAKmU,gBACK,EAAIpN,EAAIvK,EAAI,EAAI,OAHjC,I,kCAekB4X,EAAMpU,EAAK0G,GAC7B,IAAI9M,EAAOwa,EAIX,OAHGA,IACFxa,EAAOwa,EAAKjN,QAAO,SAAA6E,GAAI,OAAIA,EAAKhM,KAAS0G,MAEnC9M,I,qCAUcwa,EAAMpU,EAAK0G,GAChC,IAAI9M,EAAOwa,EAIX,OAHGA,IACFxa,EAAOwa,EAAKjN,QAAO,SAAA6E,GAAI,OAAIA,EAAKhM,KAAS0G,MAEnC9M,I,qCAScwa,EAAMC,GAY3B,OADAD,EAAOA,EAAKjN,QAAO,SAAAT,GAAK,OAVL,SAACsF,GACnB,IAAK,IAAIhM,KAAOgM,EACf,GAAiB,MAAbA,EAAKhM,KAG2E,IAAhFgM,EAAKhM,GAAK8B,WAAWuK,cAAcC,QAAQ+H,EAAMvS,WAAWuK,eAC/D,OAAO,EAIkBN,CAAWrF,Q,oCASnB4N,GACpB,IAAIC,EAAc,GAClB,IAAK,IAAMvU,KAAOsU,EAAS,CAC1B,GAAIA,EAAQ/B,eAAevS,GACVsU,EAAQtU,IAEvBuU,EAAYhS,KAAKvC,GAIpB,OAAOuU,M,KAIMvC,O,gCCvNf,4RAuBajU,EAAgB,SAACnG,GAC5B,MAAO,CACLM,KAAM7B,IACNuB,UAUSuG,EAAiB,WAC5B,MAAO,CACLjG,KAAM3B,MAWG6H,EAAgB,SAACxG,GAC5B,MAAO,CACLM,KAAMzB,IACNmB,UAUSyG,EAAgC,SAACzG,GAC5C,MAAO,CACLM,KAAMnB,IACNa,UAUS0G,EAAkC,SAAC1G,GAC9C,MAAO,CACLM,KAAMjB,IACNW,UAISgG,EAAkB,SAACnG,GAC9B,MAAO,CACLS,KAAMxB,IACNe,YAIS+c,EAAkB,WAC7B,MAAO,CACLtc,KAAMvB,MAIG8d,EAAc,WACzB,MAAO,CACLvc,KAAMtB,O,gCCjGV,8OAAO,IAAM2C,EAAe,eACfE,EAAsB,sBACtBE,EAAoB,oBACpBE,EAAqB,qBACrBE,EAAwB,wBACxBD,EAAyB,yBACzBW,EAAU,Y","file":"static/js/main.cd320e49.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Flex = props => {\r\n\tconst { children, className, alignItems, justifyContent, mobileFlex, flexDirection } = props\r\n\tconst getFlexResponsive = () => mobileFlex ? 'd-flex' : 'd-md-flex'\r\n\treturn (\r\n\t\t<div className={`${getFlexResponsive()} ${className} ${flexDirection?('flex-' + flexDirection): ''} ${alignItems?('align-items-' + alignItems):''} ${justifyContent?('justify-content-' + justifyContent):''}` }>\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nFlex.propTypes = {\r\n\tclassName: PropTypes.string,\r\n\talignItems: PropTypes.string,\r\n\tflexDirection: PropTypes.string,\r\n\tjustifyContent: PropTypes.string,\r\n\tmobileFlex: PropTypes.bool\r\n}\r\n\r\nFlex.defaultProps = {\r\n\tmobileFlex: true,\r\n\tflexDirection: 'row',\r\n\tclassName: ''\r\n};\r\n\r\n\r\nexport default Flex\r\n","import { SIDE_NAV_LIGHT, NAV_TYPE_SIDE } from 'constants/ThemeConstant';\r\nimport { env } from './EnvironmentConfig'\r\n\r\nexport const APP_NAME = 'Emilus';\r\nexport const API_BASE_URL = env.API_ENDPOINT_URL\r\nexport const APP_PREFIX_PATH = '/app';\r\nexport const AUTH_PREFIX_PATH = '/auth';\r\n\r\nexport const THEME_CONFIG = {\r\n\tnavCollapsed: false,\r\n\tsideNavTheme: SIDE_NAV_LIGHT,\r\n\tlocale: 'en',\r\n\tnavType: NAV_TYPE_SIDE,\r\n\ttopNavColor: '#3e82f7',\r\n\theaderNavColor: '',\r\n\tmobileNav: false,\r\n\tcurrentTheme: 'light'\r\n};\r\n","const dev = {\r\n  API_ENDPOINT_URL: 'https://jsonplaceholder.typicode.com'\r\n};\r\n\r\nconst prod = {\r\n  API_ENDPOINT_URL: 'https://api.prod.com'\r\n};\r\n\r\nconst test = {\r\n  API_ENDPOINT_URL: 'https://api.test.com'\r\n};\r\n\r\nconst getEnv = () => {\r\n\tswitch (process.env.NODE_ENV) {\r\n\t\tcase 'development':\r\n\t\t\treturn dev\r\n\t\tcase 'production':\r\n\t\t\treturn prod\r\n\t\tcase 'test':\r\n\t\t\treturn test\r\n\t\tdefault:\r\n\t\t\tbreak;\r\n\t}\r\n}\r\n\r\nexport const env = getEnv()\r\n","export const GET_USERS = \"GET_USERS\";\r\nexport const SET_SELECTED_USER = \"SET_SELECTED_USER\";\r\n","export const SIGNIN = 'SIGNIN'; \r\nexport const AUTHENTICATED = 'AUTHENTICATED';\r\nexport const SIGNOUT = 'SIGNOUT';\r\nexport const SIGNOUT_SUCCESS = 'SIGNOUT_SUCCESS'\r\nexport const SIGNUP = 'SIGNUP';\r\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS'\r\nexport const SHOW_AUTH_MESSAGE = 'SHOW_AUTH_MESSAGE'\r\nexport const HIDE_AUTH_MESSAGE = 'HIDE_AUTH_MESSAGE'\r\nexport const SHOW_LOADING = 'SHOW_LOADING'\r\nexport const AUTH_TOKEN = 'auth_token'\r\nexport const SIGNIN_WITH_GOOGLE = 'SIGNIN_WITH_GOOGLE'\r\nexport const SIGNIN_WITH_GOOGLE_AUTHENTICATED = 'SIGNIN_WITH_GOOGLE_AUTHENTICATED'\r\nexport const SIGNIN_WITH_FACEBOOK = 'SIGNIN_WITH_FACEBOOK'\r\nexport const SIGNIN_WITH_FACEBOOK_AUTHENTICATED = 'SIGNIN_WITH_FACEBOOK_AUTHENTICATED'","export const ROW_GUTTER = 16;\r\nexport const SIDE_NAV_WIDTH = 250;\r\nexport const SIDE_NAV_COLLAPSED_WIDTH = 80;\r\nexport const SIDE_NAV_LIGHT = 'SIDE_NAV_LIGHT';\r\nexport const SIDE_NAV_DARK = 'SIDE_NAV_DARK';\r\nexport const NAV_TYPE_SIDE = 'SIDE'\r\nexport const NAV_TYPE_TOP = 'TOP'\r\n","import {\r\n\tAUTH_TOKEN,\r\n\tAUTHENTICATED,\r\n\tSHOW_AUTH_MESSAGE,\r\n\tHIDE_AUTH_MESSAGE,\r\n\tSIGNOUT_SUCCESS,\r\n\tSIGNUP_SUCCESS,\r\n\tSHOW_LOADING,\r\n\tSIGNIN_WITH_GOOGLE_AUTHENTICATED,\r\n  SIGNIN_WITH_FACEBOOK_AUTHENTICATED\r\n} from '../constants/Auth';\r\n\r\nconst initState = {\r\n  loading: false,\r\n  message: '',\r\n  showMessage: false,\r\n  redirect: '',\r\n  token: localStorage.getItem(AUTH_TOKEN),\r\n}\r\n\r\nconst auth = (state = initState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase AUTHENTICATED:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tredirect: '/',\r\n\t\t\t\ttoken: action.token\r\n\t\t\t}\r\n\t\tcase SHOW_AUTH_MESSAGE: \r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmessage: action.message,\r\n\t\t\t\tshowMessage: true,\r\n\t\t\t\tloading: false\r\n\t\t\t}\r\n\t\tcase HIDE_AUTH_MESSAGE: \r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmessage: '',\r\n\t\t\t\tshowMessage: false,\r\n\t\t\t}\r\n\t\tcase SIGNOUT_SUCCESS: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttoken: null,\r\n\t\t\t\tredirect: '/',\r\n\t\t\t\tloading: false\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SIGNUP_SUCCESS: {\r\n\t\t\treturn {\r\n\t\t\t  ...state,\r\n\t\t\t  loading: false,\r\n\t\t\t  token: action.token\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SHOW_LOADING: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: true\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SIGNIN_WITH_GOOGLE_AUTHENTICATED: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\ttoken: action.token\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SIGNIN_WITH_FACEBOOK_AUTHENTICATED: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\ttoken: action.token\r\n\t\t\t}\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport default auth","export const TOGGLE_COLLAPSED_NAV = 'TOGGLE_COLLAPSED_NAV';\r\nexport const CHANGE_LOCALE = 'CHANGE_LOCALE';\r\nexport const SIDE_NAV_STYLE_CHANGE = 'SIDE_NAV_STYLE_CHANGE';\r\nexport const NAV_TYPE_CHANGE = 'NAV_TYPE_CHANGE';\r\nexport const TOP_NAV_COLOR_CHANGE = 'TOP_NAV_COLOR_CHANGE';\r\nexport const HEADER_NAV_COLOR_CHANGE = 'HEADER_NAV_COLOR_CHANGE';\r\nexport const TOGGLE_MOBILE_NAV = 'TOGGLE_MOBILE_NAV';\r\nexport const SWITCH_THEME = 'SWITCH_THEME';","import {\r\n  TOGGLE_COLLAPSED_NAV,\r\n  CHANGE_LOCALE,\r\n  SIDE_NAV_STYLE_CHANGE,\r\n  NAV_TYPE_CHANGE,\r\n  TOP_NAV_COLOR_CHANGE,\r\n  HEADER_NAV_COLOR_CHANGE,\r\n  TOGGLE_MOBILE_NAV,\r\n  SWITCH_THEME\r\n} from '../constants/Theme';\r\nimport { THEME_CONFIG } from 'configs/AppConfig'\r\n\r\nconst initTheme = {\r\n  ...THEME_CONFIG\r\n};\r\n\r\nconst theme = (state = initTheme, action) => {\r\n  switch (action.type) {\r\n    case TOGGLE_COLLAPSED_NAV:\r\n      return {\r\n        ...state,\r\n        navCollapsed: action.navCollapsed\r\n      };\r\n    case SIDE_NAV_STYLE_CHANGE:\r\n      return {\r\n        ...state,\r\n        sideNavTheme: action.sideNavTheme\r\n      };\r\n    case CHANGE_LOCALE:\r\n      return {\r\n        ...state,\r\n        locale: action.locale\r\n      };\r\n    case NAV_TYPE_CHANGE:\r\n      return {\r\n        ...state,\r\n        navType: action.navType\r\n      };\r\n    case TOP_NAV_COLOR_CHANGE:\r\n      return {\r\n        ...state,\r\n        topNavColor: action.topNavColor\r\n      };\r\n    case HEADER_NAV_COLOR_CHANGE:\r\n      return {\r\n        ...state,\r\n        headerNavColor: action.headerNavColor\r\n      };\r\n    case TOGGLE_MOBILE_NAV:\r\n      return {\r\n        ...state,\r\n        mobileNav: action.mobileNav\r\n      };\r\n    case SWITCH_THEME:\r\n      return {\r\n        ...state,\r\n        currentTheme: action.currentTheme\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default theme","import { GET_USERS, SET_SELECTED_USER } from \"../constants/Users\";\r\n\r\nconst users = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case GET_USERS: {\r\n            return { ...state, usersData: action.users };\r\n        }\r\n        case SET_SELECTED_USER: {\r\n            return { ...state, selectedUser: action.user };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport default users;\r\n","import {\r\n    ADD_BOARD_ELEMENTS,\r\n    CLEANUP,\r\n    CLEANUP_BOARD_ELEMENTS,\r\n    SET_DOWNLOAD_DATA,\r\n    SET_DRAGGED_ELEMENT,\r\n    SET_ELEMENTS,\r\n    UPDATE_BOARD_ELEMENTS,\r\n} from \"redux/constants/Scheduler\";\r\n\r\nconst initialState = {\r\n    dragElements: [],\r\n    draggedElement: {},\r\n    downloadData: [],\r\n    draggedBoard: [],\r\n};\r\n\r\nconst Scheduler = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_ELEMENTS: {\r\n            return { ...state, dragElements: [...state.dragElements, ...action.elements] };\r\n        }\r\n        case SET_DRAGGED_ELEMENT: {\r\n            return { ...state, draggedElement: action.element };\r\n        }\r\n        case SET_DOWNLOAD_DATA: {\r\n            return { ...state, downloadData: action.data };\r\n        }\r\n        case ADD_BOARD_ELEMENTS: {\r\n            return { ...state, draggedBoard: [...state.draggedBoard, ...action.element] };\r\n        }\r\n        case CLEANUP_BOARD_ELEMENTS: {\r\n            return { ...state, draggedBoard: [] };\r\n        }\r\n        case UPDATE_BOARD_ELEMENTS: {\r\n            console.log(action);\r\n            return {\r\n                ...state,\r\n                draggedBoard: state.draggedBoard.map(el =>\r\n                    el.id === action.payload.id\r\n                        ? { ...el, cords: { x: action.payload.cords.x, y: action.payload.cords.y } }\r\n                        : el\r\n                ),\r\n            };\r\n        }\r\n        case CLEANUP: {\r\n            return initialState;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport default Scheduler;\r\n","import { combineReducers } from \"redux\";\r\nimport Auth from \"./Auth\";\r\nimport Theme from \"./Theme\";\r\nimport Users from \"./Users\";\r\nimport Scheduler from \"./Scheduler\";\r\n\r\nconst reducers = combineReducers({\r\n    theme: Theme,\r\n    auth: Auth,\r\n    users: Users,\r\n    scheduler: Scheduler,\r\n});\r\n\r\nexport default reducers;\r\n","const FirebaseConfig = {\r\n  apiKey: 'AIzaSyAOWoRQGoegkmwnCca7B2GG5GUG_ZP1lcM',\r\n  authDomain: 'emilus.firebaseapp.com',\r\n  databaseURL: 'https://emilus.firebaseio.com',\r\n  projectId: 'emilus',\r\n  storageBucket: 'emilus.appspot.com',\r\n  messagingSenderId: '807555350717',\r\n  appId: '1:807555350717:web:145ba7c21af47203a2f7d4',\r\n  measurementId: 'G-8KE7HJB252'\r\n};\r\n\r\nexport default FirebaseConfig\r\n\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\nimport firebaseConfig from 'configs/FirebaseConfig';\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n// firebase utils\r\nconst db = firebase.firestore()\r\nconst auth = firebase.auth();\r\nconst currentUser = auth.currentUser\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\nconst facebookAuthProvider = new firebase.auth.FacebookAuthProvider();\r\nconst twitterAuthProvider = new firebase.auth.TwitterAuthProvider();\r\nconst githubAuthProvider = new firebase.auth.GithubAuthProvider();\r\n\r\nexport {\r\n\tdb,\r\n\tauth,\r\n\tcurrentUser,\r\n\tgoogleAuthProvider,\r\n\tfacebookAuthProvider,\r\n\ttwitterAuthProvider,\r\n\tgithubAuthProvider\r\n};","import { auth, googleAuthProvider, facebookAuthProvider } from 'auth/FirebaseAuth';\r\n\r\nconst FirebaseService = {}\r\n\r\nFirebaseService.signInEmailRequest = async (email, password) =>\r\n\tawait auth.signInWithEmailAndPassword(email, password).then(user => user).catch(err => err);\r\n\r\nFirebaseService.signInEmailRequest = async (email, password) =>\r\n  await auth.signInWithEmailAndPassword(email, password).then(user => user).catch(err => err);\r\n\t\t\r\nFirebaseService.signOutRequest = async () =>\r\n\tawait auth.signOut().then(user => user).catch(err => err);\r\n\r\nFirebaseService.signInGoogleRequest = async () =>\r\n  await auth.signInWithPopup(googleAuthProvider).then(user => user).catch(err => err);\r\n\r\nFirebaseService.signInFacebookRequest = async () =>\r\n  await auth.signInWithPopup(facebookAuthProvider).then(user => user).catch(err => err);\r\n\r\nFirebaseService.signUpEmailRequest = async (email, password) =>\r\n\tawait auth.createUserWithEmailAndPassword(email, password).then(user => user).catch(err => err);\t\r\n\t\r\nexport default FirebaseService","import { all, takeEvery, put, fork, call } from 'redux-saga/effects';\r\nimport {\r\n\tAUTH_TOKEN,\r\n\tSIGNIN,\r\n\tSIGNOUT,\r\n\tSIGNUP,\r\n\tSIGNIN_WITH_GOOGLE,\r\n\tSIGNIN_WITH_FACEBOOK\r\n} from '../constants/Auth';\r\nimport {\r\n\tshowAuthMessage,\r\n\tauthenticated,\r\n\tsignOutSuccess,\r\n\tsignUpSuccess,\r\n\tsignInWithGoogleAuthenticated,\r\n\tsignInWithFacebookAuthenticated\r\n} from \"../actions/Auth\";\r\n\r\nimport FirebaseService from 'services/FirebaseService'\r\n\r\nexport function* signInWithFBEmail() {\r\n  yield takeEvery(SIGNIN, function* ({payload}) {\r\n\t\tconst {email, password} = payload;\r\n\t\ttry {\r\n\t\t\tconst user = yield call(FirebaseService.signInEmailRequest, email, password);\r\n\t\t\tif (user.message) {\r\n\t\t\t\tyield put(showAuthMessage(user.message));\r\n\t\t\t} else {\r\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\r\n\t\t\t\tyield put(authenticated(user.user.uid));\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tyield put(showAuthMessage(err));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport function* signOut() {\r\n  yield takeEvery(SIGNOUT, function* () {\r\n\t\ttry {\r\n\t\t\tconst signOutUser = yield call(FirebaseService.signOutRequest);\r\n\t\t\tif (signOutUser === undefined) {\r\n\t\t\t\tlocalStorage.removeItem(AUTH_TOKEN);\r\n\t\t\t\tyield put(signOutSuccess(signOutUser));\r\n\t\t\t} else {\r\n\t\t\t\tyield put(showAuthMessage(signOutUser.message));\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tyield put(showAuthMessage(err));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport function* signUpWithFBEmail() {\r\n  yield takeEvery(SIGNUP, function* ({payload}) {\r\n\t\tconst {email, password} = payload;\r\n\t\ttry {\r\n\t\t\tconst user = yield call(FirebaseService.signUpEmailRequest, email, password);\r\n\t\t\tif (user.message) {\r\n\t\t\t\tyield put(showAuthMessage(user.message));\r\n\t\t\t} else {\r\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\r\n\t\t\t\tyield put(signUpSuccess(user.user.uid));\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tyield put(showAuthMessage(error));\r\n\t\t}\r\n\t}\r\n\t);\r\n}\r\n\r\nexport function* signInWithFBGoogle() {\r\n  yield takeEvery(SIGNIN_WITH_GOOGLE, function* () {\r\n\t\ttry {\r\n\t\t\tconst user = yield call(FirebaseService.signInGoogleRequest);\r\n\t\t\tif (user.message) {\r\n\t\t\t\tyield put(showAuthMessage(user.message));\r\n\t\t\t} else {\r\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\r\n\t\t\t\tyield put(signInWithGoogleAuthenticated(user.user.uid));\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tyield put(showAuthMessage(error));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport function* signInWithFacebook() {\r\n  yield takeEvery(SIGNIN_WITH_FACEBOOK, function* () {\r\n\t\ttry {\r\n\t\t\tconst user = yield call(FirebaseService.signInFacebookRequest);\r\n\t\t\tif (user.message) {\r\n\t\t\t\tyield put(showAuthMessage(user.message));\r\n\t\t\t} else {\r\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\r\n\t\t\t\tyield put(signInWithFacebookAuthenticated(user.user.uid));\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tyield put(showAuthMessage(error));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n\t\tfork(signInWithFBEmail),\r\n\t\tfork(signOut),\r\n\t\tfork(signUpWithFBEmail),\r\n\t\tfork(signInWithFBGoogle),\r\n\t\tfork(signInWithFacebook)\r\n  ]);\r\n}\r\n","import { all } from 'redux-saga/effects';\r\nimport Auth from './Auth';\r\n\r\nexport default function* rootSaga(getState) {\r\n  yield all([\r\n    Auth(),\r\n  ]);\r\n}\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport reducers from \"../reducers\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport rootSaga from \"../sagas/index\";\r\nimport { thunk } from \"redux-thunk\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst middlewares = [sagaMiddleware, thunk];\r\n\r\nfunction configureStore(preloadedState) {\r\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n    const store = createStore(\r\n        reducers,\r\n        preloadedState,\r\n        composeEnhancers(applyMiddleware(...middlewares))\r\n    );\r\n\r\n    sagaMiddleware.run(rootSaga);\r\n\r\n    if (module.hot) {\r\n        module.hot.accept(\"../reducers/index\", () => {\r\n            const nextRootReducer = require(\"../reducers/index\");\r\n            store.replaceReducer(nextRootReducer);\r\n        });\r\n    }\r\n\r\n    return store;\r\n}\r\n\r\nconst store = configureStore();\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport {FormattedMessage, injectIntl} from \"react-intl\";\r\n\r\nconst IntlMessage = props => <FormattedMessage {...props} />;\r\nexport default injectIntl(IntlMessage, {\r\n  withRef: false\r\n});\r\n","import React, { Component } from 'react'\r\n\r\nexport class Icon extends Component {\r\n\trender() {\r\n\t\tconst { type, className  } = this.props;\r\n\t\treturn (\r\n\t\t\t<>{React.createElement(type, { className: className })}</>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Icon\r\n","import {\r\n    DashboardOutlined,\r\n    SnippetsOutlined,\r\n    ShoppingCartOutlined,\r\n    UserOutlined,\r\n    GiftOutlined,\r\n    UsergroupAddOutlined,\r\n    ShopOutlined,\r\n    ShoppingOutlined,\r\n    MobileOutlined,\r\n    SettingOutlined,\r\n    FileTextOutlined,\r\n    MailOutlined,\r\n    PictureOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { APP_PREFIX_PATH } from \"configs/AppConfig\";\r\n\r\nconst mainNavTree = [\r\n    {\r\n        key: \"main\",\r\n        path: `${APP_PREFIX_PATH}/main`,\r\n        title: \"Основные\",\r\n        icon: \"\",\r\n        breadcrumb: false,\r\n        submenu: [\r\n            {\r\n                key: \"main-dashboards\",\r\n                path: `${APP_PREFIX_PATH}/main/dashboards`,\r\n                title: \"Дашборд\",\r\n                icon: DashboardOutlined,\r\n                breadcrumb: false,\r\n                submenu: [],\r\n            },\r\n            {\r\n                key: \"main-scheduler\",\r\n                path: `${APP_PREFIX_PATH}/main/scheduler`,\r\n                title: \"Планировщик\",\r\n                icon: SnippetsOutlined,\r\n                breadcrumb: false,\r\n                submenu: [],\r\n            },\r\n            {\r\n                key: \"main-catalog\",\r\n                path: `${APP_PREFIX_PATH}/main/catalog`,\r\n                title: \"Каталог\",\r\n                icon: ShoppingCartOutlined,\r\n                breadcrumb: false,\r\n                submenu: [\r\n                    {\r\n                        key: \"main-catalog-goods\",\r\n                        path: `${APP_PREFIX_PATH}/main/catalog/goods`,\r\n                        title: \"Товары\",\r\n                        icon: \"\",\r\n                        breadcrumb: false,\r\n                        submenu: [],\r\n                    },\r\n                    {\r\n                        key: \"main-catalog-сategories\",\r\n                        path: `${APP_PREFIX_PATH}/main/catalog/сategories`,\r\n                        title: \"Категории\",\r\n                        icon: \"\",\r\n                        breadcrumb: false,\r\n                        submenu: [],\r\n                    },\r\n                    {\r\n                        key: \"main-catalog-collections\",\r\n                        path: `${APP_PREFIX_PATH}/main/catalog/collections`,\r\n                        title: \"Коллекции\",\r\n                        icon: \"\",\r\n                        breadcrumb: false,\r\n                        submenu: [],\r\n                    },\r\n                    {\r\n                        key: \"main-catalog-combo\",\r\n                        path: `${APP_PREFIX_PATH}/main/catalog/сombo`,\r\n                        title: \"Комбо\",\r\n                        icon: \"\",\r\n                        breadcrumb: false,\r\n                        submenu: [],\r\n                    },\r\n                ],\r\n            },\r\n\r\n            {\r\n                key: \"main-orders\",\r\n                path: `${APP_PREFIX_PATH}/main/orders`,\r\n                title: \"Заказы\",\r\n                icon: ShoppingOutlined,\r\n                breadcrumb: false,\r\n                submenu: [],\r\n            },\r\n            {\r\n                key: \"main-clients\",\r\n                path: `${APP_PREFIX_PATH}/main/clients`,\r\n                title: \"Клиенты\",\r\n                icon: UserOutlined,\r\n                breadcrumb: false,\r\n                submenu: [\r\n                    {\r\n                        key: \"main-clients-list\",\r\n                        path: `${APP_PREFIX_PATH}/main/clients/list`,\r\n                        title: \"Список клиентов\",\r\n                        icon: \"\",\r\n                        breadcrumb: false,\r\n                        submenu: [],\r\n                    },\r\n                    {\r\n                        key: \"main-clients-groups\",\r\n                        path: `${APP_PREFIX_PATH}/main/clients/groups`,\r\n                        title: \"Группы клиентов\",\r\n                        icon: \"\",\r\n                        breadcrumb: false,\r\n                        submenu: [],\r\n                    },\r\n                ],\r\n            },\r\n            {\r\n                key: \"main-banners\",\r\n                path: `${APP_PREFIX_PATH}/main/banners`,\r\n                title: \"Банеры\",\r\n                icon: PictureOutlined,\r\n                breadcrumb: false,\r\n                submenu: [],\r\n            },\r\n            {\r\n                key: \"main-promo\",\r\n                path: `${APP_PREFIX_PATH}/main/promo`,\r\n                title: \"Промокоды\",\r\n                icon: GiftOutlined,\r\n                breadcrumb: false,\r\n                submenu: [],\r\n            },\r\n            {\r\n                key: \"main-shops\",\r\n                path: `${APP_PREFIX_PATH}/main/shops`,\r\n                title: \"Оффлайн точки\",\r\n                icon: ShopOutlined,\r\n                breadcrumb: false,\r\n                submenu: [\r\n                    {\r\n                        key: \"main-shops-address\",\r\n                        path: `${APP_PREFIX_PATH}/main/shops/address`,\r\n                        title: \"Адреса\",\r\n                        icon: \"\",\r\n                        breadcrumb: false,\r\n                        submenu: [],\r\n                    },\r\n                    {\r\n                        key: \"main-shops-areas\",\r\n                        path: `${APP_PREFIX_PATH}/main/shops/areas`,\r\n                        title: \"Геозоны\",\r\n                        icon: \"\",\r\n                        breadcrumb: false,\r\n                        submenu: [],\r\n                    },\r\n                ],\r\n            },\r\n            {\r\n                key: \"main-staff\",\r\n                path: `${APP_PREFIX_PATH}/main/staff`,\r\n                title: \"Сотрудники\",\r\n                icon: UsergroupAddOutlined,\r\n                breadcrumb: false,\r\n                submenu: [],\r\n            },\r\n            {\r\n                key: \"main-newsletters\",\r\n                path: `${APP_PREFIX_PATH}/main/newsletters`,\r\n                title: \"Рассылки\",\r\n                icon: MailOutlined,\r\n                breadcrumb: false,\r\n                submenu: [],\r\n            },\r\n        ],\r\n    },\r\n];\r\nconst systemNavTree = [\r\n    {\r\n        key: \"system\",\r\n        path: `${APP_PREFIX_PATH}/system`,\r\n        title: \"Системные\",\r\n        icon: \"\",\r\n        breadcrumb: false,\r\n        submenu: [\r\n            {\r\n                key: \"settings\",\r\n                path: `${APP_PREFIX_PATH}/system/settings`,\r\n                title: \"Настройки\",\r\n                icon: SettingOutlined,\r\n                breadcrumb: false,\r\n                submenu: [],\r\n            },\r\n            {\r\n                key: \"mobile\",\r\n                path: `${APP_PREFIX_PATH}/system/mobile`,\r\n                title: \"Мобильное приложение\",\r\n                icon: MobileOutlined,\r\n                breadcrumb: false,\r\n                submenu: [],\r\n            },\r\n            {\r\n                key: \"logs\",\r\n                path: `${APP_PREFIX_PATH}/system/logs`,\r\n                title: \"Логи\",\r\n                icon: FileTextOutlined,\r\n                breadcrumb: false,\r\n                submenu: [],\r\n            },\r\n        ],\r\n    },\r\n];\r\n\r\nconst navigationConfig = [...mainNavTree, ...systemNavTree];\r\n\r\nexport default navigationConfig;\r\n","import {\r\n  TOGGLE_COLLAPSED_NAV,\r\n  SIDE_NAV_STYLE_CHANGE,\r\n  CHANGE_LOCALE,\r\n  NAV_TYPE_CHANGE,\r\n  TOP_NAV_COLOR_CHANGE,\r\n  HEADER_NAV_COLOR_CHANGE,\r\n  TOGGLE_MOBILE_NAV,\r\n  SWITCH_THEME\r\n} from '../constants/Theme';\r\n\r\nexport function toggleCollapsedNav(navCollapsed) {\r\n  return {\r\n    type: TOGGLE_COLLAPSED_NAV,\r\n    navCollapsed\r\n  };\r\n}\r\n\r\nexport function onNavStyleChange(sideNavTheme) {\r\n  return {\r\n    type: SIDE_NAV_STYLE_CHANGE,\r\n    sideNavTheme\r\n  };\r\n}\r\n\r\nexport function onLocaleChange(locale) {\r\n  return {\r\n    type: CHANGE_LOCALE,\r\n    locale\r\n  };\r\n}\r\n\r\nexport function onNavTypeChange(navType) {\r\n  return {\r\n    type: NAV_TYPE_CHANGE,\r\n    navType\r\n  };\r\n}\r\n\r\nexport function onTopNavColorChange(topNavColor) {\r\n  return {\r\n    type: TOP_NAV_COLOR_CHANGE,\r\n    topNavColor\r\n  };\r\n}\r\n\r\nexport function onHeaderNavColorChange(headerNavColor) {\r\n  return {\r\n    type: HEADER_NAV_COLOR_CHANGE,\r\n    headerNavColor\r\n  };\r\n}\r\n\r\nexport function onMobileNavToggle(mobileNav) {\r\n  return {\r\n    type: TOGGLE_MOBILE_NAV,\r\n    mobileNav\r\n  };\r\n}\r\n\r\nexport function onSwitchTheme(currentTheme) {\r\n  return {\r\n    type: SWITCH_THEME,\r\n    currentTheme\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Menu, Grid } from \"antd\";\r\nimport IntlMessage from \"../util-components/IntlMessage\";\r\nimport Icon from \"../util-components/Icon\";\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\nimport { connect } from \"react-redux\";\r\nimport { SIDE_NAV_LIGHT, NAV_TYPE_SIDE } from \"constants/ThemeConstant\";\r\nimport utils from \"utils\";\r\nimport { onMobileNavToggle } from \"redux/actions/Theme\";\r\n\r\nconst { SubMenu } = Menu;\r\nconst { useBreakpoint } = Grid;\r\n\r\nconst setLocale = (isLocaleOn, localeKey) =>\r\n    isLocaleOn ? <IntlMessage id={localeKey} /> : localeKey.toString();\r\n\r\nconst setDefaultOpen = key => {\r\n    let keyList = [];\r\n    let keyString = \"\";\r\n    if (key) {\r\n        const arr = key.split(\"-\");\r\n        for (let index = 0; index < arr.length; index++) {\r\n            const elm = arr[index];\r\n            index === 0 ? (keyString = elm) : (keyString = `${keyString}-${elm}`);\r\n            keyList.push(keyString);\r\n        }\r\n    }\r\n    return keyList;\r\n};\r\n\r\nconst SideNavContent = props => {\r\n    const { sideNavTheme, routeInfo, hideGroupTitle, localization, onMobileNavToggle } = props;\r\n    const isMobile = !utils.getBreakPoint(useBreakpoint()).includes(\"lg\");\r\n    const closeMobileNav = () => {\r\n        if (isMobile) {\r\n            onMobileNavToggle(false);\r\n        }\r\n    };\r\n    return (\r\n        <Menu\r\n            theme={sideNavTheme === SIDE_NAV_LIGHT ? \"light\" : \"dark\"}\r\n            mode='inline'\r\n            style={{ height: \"100%\", borderRight: 0 }}\r\n            defaultSelectedKeys={[routeInfo?.key]}\r\n            defaultOpenKeys={setDefaultOpen(routeInfo?.key)}\r\n            className={hideGroupTitle ? \"hide-group-title\" : \"\"}>\r\n            {navigationConfig.map(menu =>\r\n                menu.submenu.length > 0 ? (\r\n                    <Menu.ItemGroup\r\n                        key={menu.key}\r\n                        title={setLocale(localization, menu.title)}>\r\n                        {menu.submenu.map(subMenuFirst =>\r\n                            subMenuFirst.submenu.length > 0 ? (\r\n                                <SubMenu\r\n                                    icon={\r\n                                        subMenuFirst.icon ? (\r\n                                            <Icon type={subMenuFirst?.icon} />\r\n                                        ) : null\r\n                                    }\r\n                                    key={subMenuFirst.key}\r\n                                    title={setLocale(localization, subMenuFirst.title)}>\r\n                                    {subMenuFirst.submenu.map(subMenuSecond => (\r\n                                        <Menu.Item key={subMenuSecond.key}>\r\n                                            {subMenuSecond.icon ? (\r\n                                                <Icon type={subMenuSecond?.icon} />\r\n                                            ) : null}\r\n                                            <span>\r\n                                                {setLocale(localization, subMenuSecond.title)}\r\n                                            </span>\r\n                                            <Link\r\n                                                onClick={() => closeMobileNav()}\r\n                                                to={subMenuSecond.path}\r\n                                            />\r\n                                        </Menu.Item>\r\n                                    ))}\r\n                                </SubMenu>\r\n                            ) : (\r\n                                <Menu.Item key={subMenuFirst.key}>\r\n                                    {subMenuFirst.icon ? <Icon type={subMenuFirst.icon} /> : null}\r\n                                    <span>{setLocale(localization, subMenuFirst.title)}</span>\r\n                                    <Link\r\n                                        onClick={() => closeMobileNav()}\r\n                                        to={subMenuFirst.path}\r\n                                    />\r\n                                </Menu.Item>\r\n                            )\r\n                        )}\r\n                    </Menu.ItemGroup>\r\n                ) : (\r\n                    <Menu.Item key={menu.key}>\r\n                        {menu.icon ? <Icon type={menu?.icon} /> : null}\r\n                        <span>{setLocale(localization, menu?.title)}</span>\r\n                        {menu.path ? (\r\n                            <Link\r\n                                onClick={() => closeMobileNav()}\r\n                                to={menu.path}\r\n                            />\r\n                        ) : null}\r\n                    </Menu.Item>\r\n                )\r\n            )}\r\n        </Menu>\r\n    );\r\n};\r\n\r\nconst TopNavContent = props => {\r\n    const { topNavColor, localization } = props;\r\n    return (\r\n        <Menu\r\n            mode='horizontal'\r\n            style={{ backgroundColor: topNavColor }}>\r\n            {navigationConfig.map(menu =>\r\n                menu.submenu.length > 0 ? (\r\n                    <SubMenu\r\n                        key={menu.key}\r\n                        popupClassName='top-nav-menu'\r\n                        title={\r\n                            <span>\r\n                                {menu.icon ? <Icon type={menu?.icon} /> : null}\r\n                                <span>{setLocale(localization, menu.title)}</span>\r\n                            </span>\r\n                        }>\r\n                        {menu.submenu.map(subMenuFirst =>\r\n                            subMenuFirst.submenu.length > 0 ? (\r\n                                <SubMenu\r\n                                    key={subMenuFirst.key}\r\n                                    icon={\r\n                                        subMenuFirst.icon ? (\r\n                                            <Icon type={subMenuFirst?.icon} />\r\n                                        ) : null\r\n                                    }\r\n                                    title={setLocale(localization, subMenuFirst.title)}>\r\n                                    {subMenuFirst.submenu.map(subMenuSecond => (\r\n                                        <Menu.Item key={subMenuSecond.key}>\r\n                                            <span>\r\n                                                {setLocale(localization, subMenuSecond.title)}\r\n                                            </span>\r\n                                            <Link to={subMenuSecond.path} />\r\n                                        </Menu.Item>\r\n                                    ))}\r\n                                </SubMenu>\r\n                            ) : (\r\n                                <Menu.Item key={subMenuFirst.key}>\r\n                                    {subMenuFirst.icon ? <Icon type={subMenuFirst?.icon} /> : null}\r\n                                    <span>{setLocale(localization, subMenuFirst.title)}</span>\r\n                                    <Link to={subMenuFirst.path} />\r\n                                </Menu.Item>\r\n                            )\r\n                        )}\r\n                    </SubMenu>\r\n                ) : (\r\n                    <Menu.Item key={menu.key}>\r\n                        {menu.icon ? <Icon type={menu?.icon} /> : null}\r\n                        <span>{setLocale(localization, menu?.title)}</span>\r\n                        {menu.path ? <Link to={menu.path} /> : null}\r\n                    </Menu.Item>\r\n                )\r\n            )}\r\n        </Menu>\r\n    );\r\n};\r\n\r\nconst MenuContent = props => {\r\n    return props.type === NAV_TYPE_SIDE ? (\r\n        <SideNavContent {...props} />\r\n    ) : (\r\n        <TopNavContent {...props} />\r\n    );\r\n};\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n    const { sideNavTheme, topNavColor } = theme;\r\n    return { sideNavTheme, topNavColor };\r\n};\r\n\r\nexport default connect(mapStateToProps, { onMobileNavToggle })(MenuContent);\r\n","import React from \"react\";\r\nimport { Layout } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport { SIDE_NAV_WIDTH, SIDE_NAV_DARK, NAV_TYPE_SIDE } from 'constants/ThemeConstant';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport MenuContent from './MenuContent'\r\n\r\nconst { Sider } = Layout;\r\n\r\nexport const SideNav = ({navCollapsed, sideNavTheme, routeInfo, hideGroupTitle, localization = true }) => {\r\n  const props = { sideNavTheme, routeInfo , hideGroupTitle, localization}\r\n  return (\r\n    <Sider \r\n      className={`side-nav ${sideNavTheme === SIDE_NAV_DARK? 'side-nav-dark' : ''}`} \r\n      width={SIDE_NAV_WIDTH} \r\n      collapsed={navCollapsed}\r\n    >\r\n      <Scrollbars autoHide>\r\n        <MenuContent \r\n          type={NAV_TYPE_SIDE} \r\n          {...props}\r\n        />\r\n      </Scrollbars>\r\n    </Sider>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, sideNavTheme } =  theme;\r\n  return { navCollapsed, sideNavTheme }\r\n};\r\n\r\nexport default connect(mapStateToProps)(SideNav);\r\n","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { NAV_TYPE_TOP } from 'constants/ThemeConstant';\r\nimport utils from 'utils'\r\nimport MenuContent from './MenuContent'\r\n\r\nexport const TopNav = ({topNavColor, localization = true}) => {\r\n\tconst props = { topNavColor, localization }\r\n\treturn (\r\n\t\t<div className={`top-nav ${utils.getColorContrast(topNavColor)}`} style={{backgroundColor: topNavColor}}>\r\n\t\t\t<div className=\"top-nav-wrapper\">\r\n\t\t\t\t<MenuContent\r\n\t\t\t\t\ttype={NAV_TYPE_TOP} \r\n\t\t\t\t\t{...props}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { topNavColor } =  theme;\r\n  return { topNavColor }\r\n};\r\n\r\nexport default connect(mapStateToProps)(TopNav);\r\n","import React from 'react';\r\nimport { Spin } from 'antd';\r\nimport PropTypes from 'prop-types'\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\n\r\nconst Icon = <LoadingOutlined style={{ fontSize: 35 }} spin />\r\n\r\nconst Loading = (props) => {\r\n\tconst { align, cover } = props\r\n\treturn (\r\n\t\t<div className={`loading text-${align} cover-${cover}`}>\r\n\t\t\t<Spin indicator={Icon} />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nLoading.propTypes = {\r\n\tsize: PropTypes.string,\r\n\tcover: PropTypes.string\r\n}\r\n\r\nLoading.defaultProps = {\r\n\talign: 'center',\r\n\tcover: 'inline'\r\n};\r\n\r\nexport default Loading","import React from 'react'\r\nimport { SIDE_NAV_WIDTH, SIDE_NAV_COLLAPSED_WIDTH, NAV_TYPE_TOP } from 'constants/ThemeConstant';\r\nimport { APP_NAME } from 'configs/AppConfig';\r\nimport { connect } from \"react-redux\";\r\nimport utils from 'utils';\r\nimport { Grid } from 'antd';\r\n\r\nconst { useBreakpoint } = Grid;\r\n\r\nconst getLogoWidthGutter = (props, isMobile) => {\r\n  const { navCollapsed, navType } = props;\r\n  const isNavTop = navType === NAV_TYPE_TOP ? true : false\r\n  if(isMobile && !props.mobileLogo) {\r\n    return 0\r\n  }\r\n  if(isNavTop) {\r\n    return 'auto'\r\n  }\r\n  if(navCollapsed) {\r\n    return `${SIDE_NAV_COLLAPSED_WIDTH}px`\r\n  } else {\r\n    return `${SIDE_NAV_WIDTH}px`\r\n  }\r\n}\r\n\r\nconst getLogo = (props) => {\r\n  const { navCollapsed, logoType } = props;\r\n  if(logoType === 'light') {\r\n    if(navCollapsed) {\r\n      return '/img/logo-sm-white.png'\r\n    }\r\n    return '/img/logo-white.png'\r\n  }\r\n\r\n  if (navCollapsed) {\r\n    return '/img/logo-sm.png'\r\n  }\r\n  return '/img/logo.png'\r\n}\r\n\r\nconst getLogoDisplay = (isMobile, mobileLogo) => {\r\n  if(isMobile && !mobileLogo) {\r\n    return 'd-none'\r\n  } else {\r\n    return 'logo'\r\n  }\r\n}\r\n\r\nexport const Logo = (props) => {\r\n  const isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg')\r\n  return (\r\n    <div\r\n      className={getLogoDisplay(isMobile, props.mobileLogo)} \r\n      style={{width: `${getLogoWidthGutter(props, isMobile)}`}}>\r\n      <img src={getLogo(props)} alt={`${APP_NAME} logo`}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, navType } =  theme;\r\n  return { navCollapsed, navType }\r\n};\r\n\r\nexport default connect(mapStateToProps)(Logo);\r\n","import React from \"react\";\r\nimport { Drawer } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport { NAV_TYPE_SIDE } from \"constants/ThemeConstant\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport MenuContent from \"./MenuContent\";\r\nimport { onMobileNavToggle } from \"redux/actions/Theme\";\r\nimport Logo from \"./Logo\";\r\nimport Flex from \"components/shared-components/Flex\";\r\nimport { ArrowLeftOutlined } from \"@ant-design/icons\";\r\n\r\nexport const MobileNav = ({\r\n  sideNavTheme,\r\n  mobileNav,\r\n  onMobileNavToggle,\r\n  routeInfo,\r\n  hideGroupTitle,\r\n  localization = true,\r\n}) => {\r\n  const props = { sideNavTheme, routeInfo, hideGroupTitle, localization };\r\n\r\n  const onClose = () => {\r\n    onMobileNavToggle(false);\r\n  };\r\n\r\n  return (\r\n    <Drawer\r\n      placement=\"left\"\r\n      closable={false}\r\n      onClose={onClose}\r\n      visible={mobileNav}\r\n      bodyStyle={{ padding: 5 }}\r\n    >\r\n      <Flex flexDirection=\"column\" className=\"h-100\">\r\n        <Flex justifyContent=\"between\" alignItems=\"center\">\r\n          <Logo mobileLogo={true} />\r\n          <div className=\"nav-close\" onClick={() => onClose()}>\r\n            <ArrowLeftOutlined />\r\n          </div>\r\n        </Flex>\r\n        <div className=\"mobile-nav-menu\">\r\n          <Scrollbars autoHide>\r\n            <MenuContent type={NAV_TYPE_SIDE} {...props} />\r\n          </Scrollbars>\r\n        </div>\r\n      </Flex>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, sideNavTheme, mobileNav } = theme;\r\n  return { navCollapsed, sideNavTheme, mobileNav };\r\n};\r\n\r\nexport default connect(mapStateToProps, { onMobileNavToggle })(MobileNav);\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { SketchPicker } from 'react-color';\r\n\r\nconst ColorPicker = props => {\r\n\r\n\tconst { colorChange, color='' } = props\r\n\r\n\tconst [visible, setVisible] = useState(false);\r\n\tconst [pickerColor, setPickerColor] = useState(color)\r\n\tconst [boxColor, setBoxColor] = useState(color)\r\n\r\n\tuseEffect(() => {\r\n\t\tsetBoxColor(color);\r\n\t\tsetPickerColor(color)\r\n\t}, [color]);\r\n\r\n\tconst onPickerDropdown = () => {\r\n\t\tsetVisible(!visible)\r\n\t}\r\n\r\n\tconst onColorChange = (value) => {\r\n\t\tconst {rgb} = value\r\n\t\tconst rgba = `rgb(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`\r\n\t\tsetBoxColor(rgba)\r\n\t\tsetPickerColor(rgb)\r\n\t\tcolorChange(value)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"color-picker\">\r\n\t\t\t<div className=\"color-picker-dropdown\">\r\n\t\t\t\t<div className=\"color\" style={{backgroundColor: boxColor ? boxColor : '#ffffff'}} onClick={onPickerDropdown} />\r\n\t\t\t</div>\r\n\t\t\t{\r\n\t\t\t\tvisible && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div className=\"color-picker-backdrop\" onClick={onPickerDropdown}/>\r\n\t\t\t\t\t\t<SketchPicker color={pickerColor} onChange={onColorChange}/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nColorPicker.propTypes = {\r\n\tcolor: PropTypes.string,\r\n\tcolorChange: PropTypes.func\r\n}\r\n\r\n\r\nexport default ColorPicker;\r\n","import React from \"react\";\r\nimport { CheckOutlined, GlobalOutlined, DownOutlined } from \"@ant-design/icons\";\r\nimport { Menu, Dropdown } from \"antd\";\r\nimport lang from \"assets/data/language.data.json\";\r\nimport { connect } from \"react-redux\";\r\nimport { onLocaleChange } from \"redux/actions/Theme\";\r\n\r\nfunction getLanguageDetail(locale) {\r\n    const data = lang.filter(elm => elm.langId === locale);\r\n    return data[0];\r\n}\r\n\r\nconst SelectedLanguage = ({ locale }) => {\r\n    const language = getLanguageDetail(locale);\r\n    const { langName, icon } = language;\r\n    return (\r\n        <div className='d-flex align-items-center'>\r\n            <img\r\n                style={{ maxWidth: \"20px\" }}\r\n                src={`/img/flags/${icon}.png`}\r\n                alt={langName}\r\n            />\r\n            <span className='font-weight-semibold ml-2'>\r\n                {langName} <DownOutlined className='font-size-xs' />\r\n            </span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const NavLanguage = ({ locale, configDisplay, onLocaleChange }) => {\r\n    const languageOption = (\r\n        <Menu>\r\n            {lang.map((elm, i) => {\r\n                return (\r\n                    <Menu.Item\r\n                        key={i}\r\n                        className={locale === elm.langId ? \"ant-dropdown-menu-item-active\" : \"\"}\r\n                        onClick={() => onLocaleChange(elm.langId)}>\r\n                        <span className='d-flex justify-content-between align-items-center'>\r\n                            <div>\r\n                                <img\r\n                                    style={{ maxWidth: \"20px\" }}\r\n                                    src={`/img/flags/${elm.icon}.png`}\r\n                                    alt={elm.langName}\r\n                                />\r\n                                <span className='font-weight-normal ml-2'>{elm.langName}</span>\r\n                            </div>\r\n                            {locale === elm.langId ? (\r\n                                <CheckOutlined className='text-success' />\r\n                            ) : null}\r\n                        </span>\r\n                    </Menu.Item>\r\n                );\r\n            })}\r\n        </Menu>\r\n    );\r\n    return (\r\n        <Dropdown\r\n            placement='bottomRight'\r\n            overlay={languageOption}\r\n            trigger={[\"click\"]}>\r\n            {configDisplay ? (\r\n                <a\r\n                    href='#/'\r\n                    className='text-gray'\r\n                    onClick={e => e.preventDefault()}>\r\n                    <SelectedLanguage locale={locale} />\r\n                </a>\r\n            ) : (\r\n                <Menu mode='horizontal'>\r\n                    <Menu.Item>\r\n                        <a\r\n                            href='#/'\r\n                            onClick={e => e.preventDefault()}>\r\n                            <GlobalOutlined className='nav-icon mr-0' />\r\n                        </a>\r\n                    </Menu.Item>\r\n                </Menu>\r\n            )}\r\n        </Dropdown>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n    const { locale } = theme;\r\n    return { locale };\r\n};\r\n\r\nexport default connect(mapStateToProps, { onLocaleChange })(NavLanguage);\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Radio, Switch, Button, message } from 'antd';\r\nimport { \r\n\ttoggleCollapsedNav, \r\n\tonNavTypeChange,\r\n\tonNavStyleChange,\r\n\tonTopNavColorChange,\r\n\tonHeaderNavColorChange,\r\n\tonSwitchTheme\r\n} from 'redux/actions/Theme';\r\nimport { CopyOutlined } from '@ant-design/icons';\r\nimport ColorPicker from 'components/shared-components/ColorPicker';\r\nimport CopyToClipboard from 'react-copy-to-clipboard';\r\nimport NavLanguage from './NavLanguage';\r\nimport { \r\n\tSIDE_NAV_LIGHT,\r\n\tNAV_TYPE_SIDE,\r\n\tNAV_TYPE_TOP,\r\n\tSIDE_NAV_DARK\r\n} from 'constants/ThemeConstant';\r\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\r\nimport utils from 'utils/index';\r\n\r\nconst colorOptions = [\r\n\t'#3e82f7',\r\n\t'#24a772',\r\n\t'#de4436',\r\n\t'#924aca',\r\n\t'#193550'\r\n]\r\n\r\nconst ListOption = ({name, selector, disabled, vertical}) => (\r\n\t<div className={`my-4 ${vertical? '' : 'd-flex align-items-center justify-content-between'}`}>\r\n\t\t<div className={`${disabled ? 'opacity-0-3' : ''} ${vertical? 'mb-3' : ''}`}>{name}</div>\r\n\t\t<div>{selector}</div>\r\n\t</div>\r\n)\r\n\r\nexport const ThemeConfigurator = ({ \r\n\tnavType, \r\n\tsideNavTheme, \r\n\tnavCollapsed,\r\n\ttopNavColor,\r\n\theaderNavColor,\r\n\tlocale,\r\n\tcurrentTheme,\r\n\ttoggleCollapsedNav, \r\n\tonNavTypeChange, \r\n\tonNavStyleChange,\r\n\tonTopNavColorChange,\r\n\tonHeaderNavColorChange,\r\n\tonSwitchTheme\r\n}) => {\r\n\tconst isNavTop = navType === NAV_TYPE_TOP? true : false\r\n\tconst isCollapse = navCollapsed \r\n\r\n\tconst { switcher, themes } = useThemeSwitcher();\r\n\r\n\tconst toggleTheme = (isChecked) => {\r\n\t\tonHeaderNavColorChange('')\r\n\t\tconst changedTheme = isChecked ? 'dark' : 'light'\r\n\t\tonSwitchTheme(changedTheme)\r\n    switcher({ theme: themes[changedTheme] });\r\n  };\r\n\r\n\tconst ontopNavColorClick = (value) => {\r\n\t\tonHeaderNavColorChange('')\r\n\t\tconst { rgb } = value\r\n\t\tconst rgba = `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`\r\n\t\tconst hex = utils.rgbaToHex(rgba)\r\n\t\tonTopNavColorChange(hex)\r\n\t}\r\n\tconst onHeaderNavColorClick = (value) => {\r\n\t\tconst { rgb } = value\r\n\t\tconst rgba = `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`\r\n\t\tconst hex = utils.rgbaToHex(rgba)\r\n\t\tonHeaderNavColorChange(hex)\r\n\t}\r\n\r\n\tconst onNavTypeClick = (value) => {\r\n\t\tonHeaderNavColorChange('')\r\n\t\tif(value === NAV_TYPE_TOP) {\r\n\t\t\tonTopNavColorChange(colorOptions[0])\r\n\t\t\ttoggleCollapsedNav(false)\r\n\t\t}\r\n\t\tonNavTypeChange(value)\r\n\t}\r\n\r\n\tconst genCopySettingJson = (configState) => JSON.stringify(configState, null, 2);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"mb-5\">\r\n\t\t\t\t<h4 className=\"mb-3 font-weight-bold\">Navigation</h4>\r\n\t\t\t\t{\r\n\t\t\t\t\tisNavTop ?\r\n\t\t\t\t\t<ListOption \r\n\t\t\t\t\t\tname=\"Top Nav Color:\"\r\n\t\t\t\t\t\tvertical\r\n\t\t\t\t\t\tselector={\r\n\t\t\t\t\t\t\t<ColorPicker color={topNavColor} colorChange={ontopNavColorClick}/>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t:\r\n\t\t\t\t\t<ListOption \r\n\t\t\t\t\t\tname=\"Header Nav Color:\"\r\n\t\t\t\t\t\tvertical\r\n\t\t\t\t\t\tselector={\r\n\t\t\t\t\t\t\t<ColorPicker color={headerNavColor} colorChange={onHeaderNavColorClick}/>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Navigation Type:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Radio.Group \r\n\t\t\t\t\t\t\tsize=\"small\" \r\n\t\t\t\t\t\t\tonChange={e => onNavTypeClick(e.target.value)} \r\n\t\t\t\t\t\t\tvalue={navType}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Radio.Button value={NAV_TYPE_SIDE}>Side</Radio.Button>\r\n\t\t\t\t\t\t\t<Radio.Button value={NAV_TYPE_TOP}>Top</Radio.Button>\r\n\t\t\t\t\t\t</Radio.Group>\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Side Nav Color:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Radio.Group\r\n\t\t\t\t\t\t\tdisabled={isNavTop}\r\n\t\t\t\t\t\t\tsize=\"small\" \r\n\t\t\t\t\t\t\tonChange={e => onNavStyleChange(e.target.value)} \r\n\t\t\t\t\t\t\tvalue={sideNavTheme}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Radio.Button value={SIDE_NAV_LIGHT}>Light</Radio.Button>\r\n\t\t\t\t\t\t\t<Radio.Button value={SIDE_NAV_DARK}>Dark</Radio.Button>\r\n\t\t\t\t\t\t</Radio.Group>\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdisabled={isNavTop}\r\n\t\t\t\t/>\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Side Nav Collapse:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Switch \r\n\t\t\t\t\t\t\tdisabled={isNavTop} \r\n\t\t\t\t\t\t\tchecked={isCollapse} \r\n\t\t\t\t\t\t\tonChange={() => toggleCollapsedNav(!navCollapsed)} \r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdisabled={isNavTop}\r\n\t\t\t\t/>\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Dark Theme:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Switch checked={currentTheme === 'dark'} onChange={toggleTheme} />\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"mb-5\">\r\n\t\t\t\t<h4 className=\"mb-3 font-weight-bold\">Locale</h4>\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Language:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<NavLanguage configDisplay/>\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<CopyToClipboard\r\n\t\t\t\t\ttext={genCopySettingJson({ navType, sideNavTheme, navCollapsed, topNavColor, headerNavColor, locale, currentTheme})}\r\n\t\t\t\t\tonCopy={() => message.success('Copy Success, please paste it to src/configs/AppConfig.js THEME_CONFIG variable.') }\r\n\t\t\t\t>\r\n\t\t\t\t\t<Button icon={<CopyOutlined /> } block>\r\n\t\t\t\t\t\t<span>Copy Setting</span>\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</CopyToClipboard>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navType, sideNavTheme, navCollapsed, topNavColor, headerNavColor, locale, currentTheme } =  theme;\r\n  return { navType, sideNavTheme, navCollapsed, topNavColor, headerNavColor, locale, currentTheme }\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n\ttoggleCollapsedNav,\r\n\tonNavTypeChange,\r\n\tonNavStyleChange,\r\n\tonTopNavColorChange,\r\n\tonHeaderNavColorChange,\r\n\tonSwitchTheme\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ThemeConfigurator)\r\n","import React, { Component } from 'react';\r\nimport { SettingOutlined } from '@ant-design/icons';\r\nimport { Drawer, Menu } from 'antd';\r\nimport ThemeConfigurator from './ThemeConfigurator';\r\nimport { connect } from \"react-redux\";\r\n\r\nexport class NavPanel extends Component {\r\n\tstate = { visible: false };\r\n\r\n  showDrawer = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  onClose = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n\t};\r\n\t\r\n\trender() {\r\n\t\treturn (\r\n      <>\r\n        <Menu mode=\"horizontal\">\r\n          <Menu.Item onClick={this.showDrawer}>\r\n            <SettingOutlined className=\"nav-icon mr-0\" />\r\n          </Menu.Item>\r\n        </Menu>\r\n        <Drawer\r\n          title=\"Theme Config\"\r\n          placement=\"right\"\r\n          width={350}\r\n          onClose={this.onClose}\r\n          visible={this.state.visible}\r\n        >\r\n          <ThemeConfigurator/>\r\n        </Drawer>\r\n      </>\r\n    );\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { locale } =  theme;\r\n  return { locale }\r\n};\r\n\r\nexport default connect(mapStateToProps)(NavPanel);","import React, { useState, useRef } from 'react';\r\nimport { \r\n\tDashboardOutlined,\r\n\tAppstoreOutlined,\r\n\tAntDesignOutlined,\r\n\tFileTextOutlined,\r\n\tSearchOutlined\r\n} from '@ant-design/icons';\r\nimport { Link } from \"react-router-dom\";\r\nimport { AutoComplete, Input } from 'antd';\r\nimport IntlMessage from 'components/util-components/IntlMessage';\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\n\r\nfunction getOptionList (navigationTree, optionTree) {\r\n\toptionTree = optionTree ? optionTree : [];\r\n\tfor ( const navItem of navigationTree ) {\r\n\t\tif(navItem.submenu.length === 0) {\r\n\t\t\toptionTree.push(navItem)\r\n\t\t}\r\n\t\tif(navItem.submenu.length > 0) {\r\n\t\t\tgetOptionList(navItem.submenu, optionTree);\r\n\t\t}\r\n\t}\r\n\treturn optionTree \r\n}\r\n\r\nconst optionList = getOptionList(navigationConfig)\r\n\r\nconst getCategoryIcon = category => {\r\n\tswitch (category) {\r\n\t\tcase 'dashboards':\r\n\t\t\treturn <DashboardOutlined className=\"text-success\"/>;\r\n\t\tcase 'apps':\r\n\t\t\treturn <AppstoreOutlined className=\"text-danger\"/>;\r\n\t\tcase 'components':\r\n\t\t\treturn <AntDesignOutlined className=\"text-primary\"/>;\r\n\t\tcase 'extra':\r\n\t\t\treturn <FileTextOutlined className=\"text-warning\"/>;\r\n\t\tdefault:\r\n\t\t\treturn null;\r\n\t}\r\n}\r\n\r\nconst searchResult = () => optionList.map((item) => {\r\n\tconst category = item.key.split('-')[0]\r\n\treturn {\r\n\t\tvalue: item.path,\r\n\t\tlabel: (\r\n\t\t\t<Link to={item.path}>\r\n\t\t\t\t<div className=\"search-list-item\">\r\n\t\t\t\t\t<div className=\"icon\">\r\n\t\t\t\t\t\t{getCategoryIcon(category)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div className=\"font-weight-semibold\"><IntlMessage id={item.title} /></div>\r\n\t\t\t\t\t\t<div className=\"font-size-sm text-muted\">{category} </div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Link>\r\n\t\t),\r\n\t};\r\n});\r\n\r\nconst SearchInput = props => {\r\n\tconst { active, close, isMobile, mode } = props\r\n\tconst [value, setValue] = useState('');\r\n\tconst [options, setOptions] = useState([])\r\n\tconst inputRef = useRef(null);\r\n\r\n\tconst onSelect = () => {\r\n\t\tsetValue('')\r\n\t\tsetOptions([])\r\n\t\tif(close) {\r\n\t\t\tclose()\r\n\t\t}\r\n  };\r\n\r\n\tconst onSearch = searchText => {\r\n\t\tsetValue(searchText)\r\n\t\tsetOptions(!searchText ? [] : searchResult(searchText))\r\n\t};\r\n\t\r\n\tconst autofocus = () => {\r\n\t\tinputRef.current.focus();\r\n\t}\r\n\r\n\tif(active) {\r\n\t\tautofocus()\r\n\t}\r\n\r\n\treturn (\r\n\t\t<AutoComplete\r\n\t\t\tref={inputRef} \r\n\t\t\tclassName={`nav-search-input ${isMobile? 'is-mobile' : ''} ${mode === 'light' ? 'light' : ''}`}\r\n\t\t\tdropdownClassName=\"nav-search-dropdown\"\r\n\t\t\toptions={options}\r\n\t\t\tonSelect={onSelect}\r\n\t\t\tonSearch={onSearch}\r\n\t\t\tvalue={value}\r\n\t\t\tfilterOption={(inputValue, option) => \r\n\t\t\t\toption.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t<Input placeholder=\"Search...\"  prefix={<SearchOutlined className=\"mr-0\" />} />\r\n\t\t</AutoComplete>\r\n\t)\r\n}\r\n\r\nexport default SearchInput\r\n","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n\tCloseOutlined,\r\n} from '@ant-design/icons';\r\nimport utils from 'utils'\r\nimport SearchInput from './SearchInput';\r\n\r\nexport const NavSearch = (props) => {\r\n\tconst { active, close, headerNavColor } = props\r\n\tconst mode = utils.getColorContrast(headerNavColor)\r\n\r\n\treturn (\r\n\t\t<div className={`nav-search ${active ? 'nav-search-active' : ''} ${mode}`} style={{backgroundColor: headerNavColor}}>\r\n\t\t\t<div className=\"d-flex align-items-center w-100\">\r\n\t\t\t\t<SearchInput close={close} active={active}/>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"nav-close\" onClick={close}>\r\n\t\t\t\t<CloseOutlined />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { headerNavColor } =  theme;\r\n  return { headerNavColor }\r\n};\r\n\r\nexport default connect(mapStateToProps, {})(NavSearch)","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Layout } from \"antd\";\r\nimport { MenuFoldOutlined, MenuUnfoldOutlined } from '@ant-design/icons';\r\nimport Logo from './Logo';\r\nimport NavPanel from './NavPanel';\r\nimport NavSearch  from './NavSearch';\r\nimport { toggleCollapsedNav, onMobileNavToggle } from 'redux/actions/Theme';\r\nimport { NAV_TYPE_TOP, SIDE_NAV_COLLAPSED_WIDTH, SIDE_NAV_WIDTH } from 'constants/ThemeConstant';\r\nimport utils from 'utils'\r\n\r\nconst { Header } = Layout;\r\n\r\nexport const HeaderNav = props => {\r\n  const { navCollapsed, mobileNav, navType, headerNavColor, toggleCollapsedNav, onMobileNavToggle, isMobile, currentTheme } = props;\r\n  const [searchActive, setSearchActive] = useState(false)\r\n\r\n  const onSearchClose = () => {\r\n    setSearchActive(false)\r\n  }\r\n\r\n  const onToggle = () => {\r\n    if(!isMobile) {\r\n      toggleCollapsedNav(!navCollapsed)\r\n    } else {\r\n      onMobileNavToggle(!mobileNav)\r\n    }\r\n  }\r\n\r\n  const isNavTop = navType === NAV_TYPE_TOP ? true : false\r\n  const mode = ()=> {\r\n    if(!headerNavColor) {\r\n      return utils.getColorContrast(currentTheme === 'dark' ? '#00000' : '#ffffff' )\r\n    }\r\n    return utils.getColorContrast(headerNavColor)\r\n  }\r\n  const navMode = mode()\r\n  const getNavWidth = () => {\r\n    if(isNavTop || isMobile) {\r\n      return '0px'\r\n    }\r\n    if(navCollapsed) {\r\n      return `${SIDE_NAV_COLLAPSED_WIDTH}px`\r\n    } else {\r\n      return `${SIDE_NAV_WIDTH}px`\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(!isMobile) {\r\n      onSearchClose()\r\n    }\r\n  })\r\n\r\n  return (\r\n    <Header className={`app-header ${navMode}`} style={{backgroundColor: headerNavColor}}>\r\n      <div className={`app-header-wrapper ${isNavTop ? 'layout-top-nav' : ''}`}>\r\n        <Logo logoType={navMode}/>\r\n        <div className=\"nav\" style={{width: `calc(100% - ${getNavWidth()})`}}>\r\n          <div className=\"nav-left\">\r\n            <ul className=\"ant-menu ant-menu-root ant-menu-horizontal\">          \r\n              {\r\n                isNavTop && !isMobile ?\r\n                null\r\n                :\r\n                <li className=\"ant-menu-item ant-menu-item-only-child\" onClick={() => {onToggle()}}>\r\n                  {navCollapsed || isMobile ? <MenuUnfoldOutlined className=\"nav-icon\" /> : <MenuFoldOutlined className=\"nav-icon\" />}\r\n                </li>\r\n              }\r\n            </ul>\r\n          </div>\r\n          <div className=\"nav-right\">\r\n            <NavPanel />\r\n          </div>\r\n          <NavSearch active={searchActive} close={onSearchClose}/>\r\n        </div>\r\n      </div>\r\n    </Header>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, navType, headerNavColor, mobileNav, currentTheme } =  theme;\r\n  return { navCollapsed, navType, headerNavColor, mobileNav, currentTheme }\r\n};\r\n\r\nexport default connect(mapStateToProps, {toggleCollapsedNav, onMobileNavToggle})(HeaderNav);","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Breadcrumb } from 'antd';\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\nimport IntlMessage from 'components/util-components/IntlMessage';\r\n\r\nlet breadcrumbData = { \r\n\t'/app' : <IntlMessage id=\"home\" />\r\n};\r\n\r\nnavigationConfig.forEach((elm, i) => {\r\n\tconst assignBreadcrumb = (obj) => breadcrumbData[obj.path] = <IntlMessage id={obj.title} />;\r\n\tassignBreadcrumb(elm);\r\n\tif (elm.submenu) {\r\n\t\telm.submenu.forEach( elm => {\r\n\t\t\tassignBreadcrumb(elm)\r\n\t\t\tif(elm.submenu) {\r\n\t\t\t\telm.submenu.forEach( elm => {\r\n\t\t\t\t\tassignBreadcrumb(elm)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n})\r\n\r\nconst BreadcrumbRoute = withRouter(props => {\r\n\tconst { location } = props;\r\n\tconst pathSnippets = location.pathname.split('/').filter(i => i);\r\n\tconst buildBreadcrumb = pathSnippets.map((_, index) => {\r\n    const url = `/${pathSnippets.slice(0, index + 1).join('/')}`;\r\n    return (\r\n      <Breadcrumb.Item key={url}>\r\n        <Link to={url}>{breadcrumbData[url]}</Link>\r\n      </Breadcrumb.Item>\r\n    );\r\n\t});\r\n  \r\n  return (\r\n\t\t<Breadcrumb>\r\n\t\t\t{buildBreadcrumb}\r\n\t\t</Breadcrumb>\r\n  );\r\n});\r\n\r\nexport class AppBreadcrumb extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<BreadcrumbRoute />\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default AppBreadcrumb\r\n","import React from 'react'\r\nimport AppBreadcrumb from 'components/layout-components/AppBreadcrumb';\r\nimport IntlMessage from '../util-components/IntlMessage';\r\n\r\nexport const PageHeader = ({ title, display }) => {\r\n\treturn (\r\n\t\tdisplay ? (\r\n\t\t\t<div className=\"app-page-header\">\r\n\t\t\t\t<h3 className=\"mb-0 mr-3 font-weight-semibold\">\r\n\t\t\t\t\t<IntlMessage id={title? title : 'home'}/>\r\n\t\t\t\t</h3>\r\n\t\t\t\t<AppBreadcrumb />\r\n\t\t\t</div>\r\n\t\t)\r\n\t\t: null\r\n\t)\r\n}\r\n\r\nexport default PageHeader","import React from 'react'\r\nimport { APP_NAME } from 'configs/AppConfig';\r\n\r\nexport default function Footer() {\r\n\treturn (\r\n\t\t<footer className=\"footer\">\r\n\t\t\t<span>Copyright  &copy;  {`${new Date().getFullYear()}`} <span className=\"font-weight-semibold\">{`${APP_NAME}`}</span> All rights reserved.</span>\r\n\t\t</footer>\r\n\t)\r\n}\r\n\r\n","import React, { lazy, Suspense } from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport Loading from \"components/shared-components/Loading\";\r\nimport { APP_PREFIX_PATH } from \"configs/AppConfig\";\r\n\r\nexport const AppViews = () => {\r\n    return (\r\n        <Suspense fallback={<Loading cover='content' />}>\r\n            <Switch>\r\n                <Route\r\n                    path={`${APP_PREFIX_PATH}/home`}\r\n                    component={lazy(() => import(`./home`))}\r\n                />\r\n                <Route\r\n                    path={`${APP_PREFIX_PATH}/main/clients/settings/:id`}\r\n                    component={lazy(() => import(`./pages/setting`))}\r\n                />\r\n                <Redirect\r\n                    exact\r\n                    from={`${APP_PREFIX_PATH}`}\r\n                    to={`${APP_PREFIX_PATH}/home`}\r\n                />\r\n                <Route\r\n                    exact\r\n                    path={`${APP_PREFIX_PATH}/main/clients/list`}\r\n                    component={lazy(() => import(`./pages/user-list`))}\r\n                />\r\n                <Route\r\n                    exact\r\n                    path={`${APP_PREFIX_PATH}/main/scheduler`}\r\n                    component={lazy(() => import(`./pages/scheduler`))}\r\n                />\r\n            </Switch>\r\n        </Suspense>\r\n    );\r\n};\r\n\r\nexport default React.memo(AppViews);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport SideNav from 'components/layout-components/SideNav';\r\nimport TopNav from 'components/layout-components/TopNav';\r\nimport Loading from 'components/shared-components/Loading';\r\nimport MobileNav from 'components/layout-components/MobileNav'\r\nimport HeaderNav from 'components/layout-components/HeaderNav';\r\nimport PageHeader from 'components/layout-components/PageHeader';\r\nimport Footer from 'components/layout-components/Footer';\r\nimport AppViews from 'views/app-views';\r\nimport {\r\n  Layout,\r\n  Grid,\r\n} from \"antd\";\r\n\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\nimport { \r\n  SIDE_NAV_WIDTH, \r\n  SIDE_NAV_COLLAPSED_WIDTH,\r\n  NAV_TYPE_SIDE,\r\n  NAV_TYPE_TOP\r\n} from 'constants/ThemeConstant';\r\nimport utils from 'utils';\r\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\r\nconst { Content } = Layout;\r\nconst { useBreakpoint } = Grid;\r\n\r\nexport const AppLayout = ({ navCollapsed, navType, location }) => {\r\n  const currentRouteInfo = utils.getRouteInfo(navigationConfig, location.pathname)\r\n  const screens = utils.getBreakPoint(useBreakpoint());\r\n  const isMobile = !screens.includes('lg')\r\n  const isNavSide = navType === NAV_TYPE_SIDE\r\n  const isNavTop = navType === NAV_TYPE_TOP\r\n  const getLayoutGutter = () => {\r\n    if(isNavTop || isMobile) {\r\n      return 0\r\n    }\r\n    return navCollapsed ? SIDE_NAV_COLLAPSED_WIDTH : SIDE_NAV_WIDTH\r\n  }\r\n\r\n  const { status } = useThemeSwitcher();\r\n\r\n  if (status === 'loading') {\r\n    return <Loading cover=\"page\" />;\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <HeaderNav isMobile={isMobile}/>\r\n      {(isNavTop && !isMobile) ? <TopNav routeInfo={currentRouteInfo}/> : null}\r\n      <Layout className=\"app-container\">\r\n        {(isNavSide && !isMobile) ? <SideNav routeInfo={currentRouteInfo}/> : null }\r\n        <Layout className=\"app-layout\" style={{paddingLeft: getLayoutGutter()}}>\r\n          <div className={`app-content ${isNavTop ? 'layout-top-nav' : ''}`}>\r\n            <PageHeader display={currentRouteInfo?.breadcrumb} title={currentRouteInfo?.title} />\r\n            <Content>\r\n              <AppViews />\r\n            </Content>\r\n          </div>\r\n          <Footer />\r\n        </Layout>\r\n      </Layout>\r\n      {isMobile && <MobileNav />}\r\n    </Layout>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, navType, locale } =  theme;\r\n  return { navCollapsed, navType, locale }\r\n};\r\n\r\nexport default connect(mapStateToProps)(React.memo(AppLayout));","import React, { lazy, Suspense } from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport Loading from 'components/shared-components/Loading';\r\nimport { AUTH_PREFIX_PATH } from 'configs/AppConfig'\r\n\r\nexport const AppViews = () => {\r\n  return (\r\n    <Suspense fallback={<Loading cover=\"page\"/>}>\r\n      <Switch>\r\n        <Route path={`${AUTH_PREFIX_PATH}/login`} component={lazy(() => import(`./authentication/login`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/login-1`} component={lazy(() => import(`./authentication/login-1`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/login-2`} component={lazy(() => import(`./authentication/login-2`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/register-1`} component={lazy(() => import(`./authentication/register-1`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/register-2`} component={lazy(() => import(`./authentication/register-2`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/forgot-password`} component={lazy(() => import(`./authentication/forgot-password`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/error-1`} component={lazy(() => import(`./errors/error-page-1`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/error-2`} component={lazy(() => import(`./errors/error-page-2`))} />\r\n        <Redirect from={`${AUTH_PREFIX_PATH}`} to={`${AUTH_PREFIX_PATH}/login`} />\r\n      </Switch>\r\n    </Suspense>\r\n  )\r\n}\r\n\r\nexport default AppViews;\r\n\r\n","import React from 'react'\r\nimport { Switch, Route, } from \"react-router-dom\";\r\nimport AuthViews from 'views/auth-views'\r\n\r\nexport const AuthLayout = () => {\r\n\treturn (\r\n\t\t<div className=\"auth-container\">\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route path=\"\" component={AuthViews} />\r\n\t\t\t</Switch>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n\r\nexport default AuthLayout\r\n","import antdEnUS from 'antd/es/locale/en_US';\r\nimport enMsg from \"../locales/en_US.json\";\r\n\r\nconst EnLang = {\r\n  antd: antdEnUS,\r\n  locale: 'en-US',\r\n  messages: {\r\n    ...enMsg\r\n  },\r\n};\r\nexport default EnLang;\r\n","import antdZhCn from 'antd/es/locale/zh_CN';\r\nimport zhMsg from \"../locales/zh_CN.json\";\r\n\r\nconst ZhLang = {\r\n  antd: antdZhCn,\r\n  locale: 'zh',\r\n  messages: {\r\n    ...zhMsg\r\n  },\r\n};\r\nexport default ZhLang;\r\n","import antdFrFR from 'antd/es/locale/fr_FR';\r\nimport frMsg from \"../locales/fr_FR.json\";\r\n\r\nconst FrLang = {\r\n  antd: antdFrFR,\r\n  locale: 'fr-FR',\r\n  messages: {\r\n    ...frMsg\r\n  },\r\n};\r\nexport default FrLang;\r\n","import enLang from './entries/en_US';\r\nimport zhLang from './entries/zh_CN';\r\nimport frLang from './entries/fr_FR';\r\nimport jaLang from './entries/ja_JP'\r\n\r\nconst AppLocale = {\r\n    en: enLang,\r\n    zh: zhLang,\r\n    fr: frLang,\r\n    ja: jaLang\r\n};\r\n\r\nexport default AppLocale;","import antdJaJP from 'antd/es/locale/ja_JP';\r\nimport jaMsg from \"../locales/ja_JP.json\";\r\n\r\nconst JaLang = {\r\n  antd: antdJaJP,\r\n  locale: 'ja-JP',\r\n  messages: {\r\n    ...jaMsg\r\n  },\r\n};\r\nexport default JaLang;\r\n","import React from \"react\";\r\nimport { Route, Switch, Redirect, withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport AppLayout from \"layouts/app-layout\";\r\nimport AuthLayout from 'layouts/auth-layout';\r\nimport AppLocale from \"lang\";\r\nimport { IntlProvider } from \"react-intl\";\r\nimport { ConfigProvider } from 'antd';\r\nimport { APP_PREFIX_PATH, AUTH_PREFIX_PATH } from 'configs/AppConfig'\r\n\r\nexport const Views = (props) => {\r\n  const { locale, location } = props;\r\n  const currentAppLocale = AppLocale[locale];\r\n  return (\r\n    <IntlProvider\r\n      locale={currentAppLocale.locale}\r\n      messages={currentAppLocale.messages}>\r\n      <ConfigProvider locale={currentAppLocale.antd}>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Redirect to={APP_PREFIX_PATH} />\r\n          </Route>\r\n          <Route path={AUTH_PREFIX_PATH}>\r\n            <AuthLayout />\r\n          </Route>\r\n          <Route path={APP_PREFIX_PATH}>\r\n            <AppLayout location={location}/>\r\n          </Route>\r\n        </Switch>\r\n      </ConfigProvider>\r\n    </IntlProvider>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme, auth }) => {\r\n  const { locale } =  theme;\r\n  const { token } = auth;\r\n  return { locale, token }\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps)(Views));","import React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\nimport { HashRouter as Router } from \"react-router-dom\";\r\nimport Views from \"./views\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport { ThemeSwitcherProvider } from \"react-css-theme-switcher\";\r\nimport { THEME_CONFIG } from \"./configs/AppConfig\";\r\n\r\nconst themes = {\r\n    dark: `${process.env.PUBLIC_URL}/css/dark-theme.css`,\r\n    light: `${process.env.PUBLIC_URL}/css/light-theme.css`,\r\n};\r\n\r\nfunction App() {\r\n    return (\r\n        <div className='App'>\r\n            <Provider store={store}>\r\n                <ThemeSwitcherProvider\r\n                    themeMap={themes}\r\n                    defaultTheme={THEME_CONFIG.currentTheme}\r\n                    insertionPoint='styles-insertion-point'>\r\n                    <Router>\r\n                        <Switch>\r\n                            <Route\r\n                                path='/'\r\n                                component={Views}\r\n                            />\r\n                        </Switch>\r\n                    </Router>\r\n                </ThemeSwitcherProvider>\r\n            </Provider>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './index.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","class Utils {\r\n\r\n\t/**\r\n\t * Get first character from first & last sentences of a username\r\n\t * @param {String} name - Username\r\n\t * @return {String} 2 characters string\r\n\t */\r\n\tstatic getNameInitial(name) {\r\n\t\tlet initials = name.match(/\\b\\w/g) || [];\r\n\t\treturn ((initials.shift() || '') + (initials.pop() || '')).toUpperCase();\r\n\t}\r\n\r\n\t/**\r\n\t * Get current path related object from Navigation Tree\r\n\t * @param {Array} navTree - Navigation Tree from directory 'configs/NavigationConfig'\r\n\t * @param {String} path - Location path you looking for e.g '/app/dashboards/analytic'\r\n\t * @return {Object} object that contained the path string\r\n\t */\r\n\tstatic getRouteInfo(navTree, path) {\r\n\t\tif( navTree.path === path ){\r\n\t\t  return navTree;\r\n\t\t}\r\n\t\tlet route; \r\n\t\tfor (let p in navTree) {\r\n\t\t  if( navTree.hasOwnProperty(p) && typeof navTree[p] === 'object' ) {\r\n\t\t\t\troute = this.getRouteInfo(navTree[p], path);\r\n\t\t\t\tif(route){\r\n\t\t\t\t\treturn route;\r\n\t\t\t\t}\r\n\t\t  }\r\n\t\t}\r\n\t\treturn route;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Get accessible color contrast\r\n\t * @param {String} hex - Hex color code e.g '#3e82f7'\r\n\t * @return {String} 'dark' or 'light'\r\n\t */\r\n\tstatic getColorContrast(hex){\r\n\t\tif(!hex) {\r\n\t\t\treturn 'dark'\r\n\t\t}\r\n\t\tconst threshold = 130;\r\n\t\tconst hRed = hexToR(hex);\r\n\t\tconst hGreen = hexToG(hex);\r\n\t\tconst hBlue = hexToB(hex);\r\n\t\tfunction hexToR(h) {return parseInt((cutHex(h)).substring(0,2),16)}\r\n\t\tfunction hexToG(h) {return parseInt((cutHex(h)).substring(2,4),16)}\r\n\t\tfunction hexToB(h) {return parseInt((cutHex(h)).substring(4,6),16)}\r\n\t\tfunction cutHex(h) {return (h.charAt(0) === '#') ? h.substring(1,7):h}\r\n\t\tconst cBrightness = ((hRed * 299) + (hGreen * 587) + (hBlue * 114)) / 1000;\r\n\t\tif (cBrightness > threshold){\r\n\t\t\treturn 'dark'\r\n\t\t} else { \r\n\t\t\treturn 'light'\r\n\t\t}\t\r\n\t}\r\n\r\n\t/**\r\n\t * Darken or lighten a hex color \r\n\t * @param {String} color - Hex color code e.g '#3e82f7'\r\n\t * @param {Number} percent - Percentage -100 to 100, positive for lighten, negative for darken\r\n\t * @return {String} Darken or lighten color \r\n\t */\r\n\tstatic shadeColor(color, percent) {\r\n\t\tlet R = parseInt(color.substring(1,3),16);\r\n\t\tlet G = parseInt(color.substring(3,5),16);\r\n\t\tlet B = parseInt(color.substring(5,7),16);\r\n\t\tR = parseInt(R * (100 + percent) / 100);\r\n\t\tG = parseInt(G * (100 + percent) / 100);\r\n\t\tB = parseInt(B * (100 + percent) / 100);\r\n\t\tR = (R<255)?R:255;  \r\n\t\tG = (G<255)?G:255;  \r\n\t\tB = (B<255)?B:255;  \r\n\t\tconst RR = ((R.toString(16).length === 1) ? `0${R.toString(16)}` : R.toString(16));\r\n\t\tconst GG = ((G.toString(16).length === 1) ? `0${G.toString(16)}` : G.toString(16));\r\n\t\tconst BB = ((B.toString(16).length === 1) ? `0${B.toString(16)}` : B.toString(16));\r\n\t\treturn `#${RR}${GG}${BB}`; \r\n\t}\r\n\r\n\t/**\r\n\t * Convert RGBA to HEX \r\n\t * @param {String} rgba - RGBA color code e.g 'rgba(197, 200, 198, .2)')'\r\n\t * @return {String} HEX color \r\n\t */\r\n\tstatic rgbaToHex(rgba) {\r\n\t\tconst trim = str => (str.replace(/^\\s+|\\s+$/gm,''))\r\n\t\tconst inParts = rgba.substring(rgba.indexOf(\"(\")).split(\",\"),\r\n\t\t\tr = parseInt(trim(inParts[0].substring(1)), 10),\r\n\t\t\tg = parseInt(trim(inParts[1]), 10),\r\n\t\t\tb = parseInt(trim(inParts[2]), 10),\r\n\t\t\ta = parseFloat(trim(inParts[3].substring(0, inParts[3].length - 1))).toFixed(2);\r\n\t\t\tconst outParts = [\r\n\t\t\tr.toString(16),\r\n\t\t\tg.toString(16),\r\n\t\t\tb.toString(16),\r\n\t\t\tMath.round(a * 255).toString(16).substring(0, 2)\r\n\t\t];\r\n\r\n\t\toutParts.forEach(function (part, i) {\r\n\t\t\tif (part.length === 1) {\r\n\t\t\t\toutParts[i] = '0' + part;\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn (`#${outParts.join('')}`);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns either a positive or negative \r\n\t * @param {Number} number - number value\r\n\t * @param {any} positive - value that return when positive\r\n\t * @param {any} negative - value that return when negative\r\n\t * @return {any} positive or negative value based on param\r\n\t */\r\n\tstatic getSignNum(number, positive, negative) {\r\n\t\tif (number > 0) {\r\n\t\t\treturn positive\r\n\t\t}\r\n\t\tif (number < 0) {\r\n\t\t\treturn negative\r\n\t\t}\r\n\t\treturn null\r\n\t}\r\n\r\n\t/**\r\n\t * Returns either ascending or descending value\r\n\t * @param {Object} a - antd Table sorter param a\r\n\t * @param {Object} b - antd Table sorter param b\r\n\t * @param {String} key - object key for compare\r\n\t * @return {any} a value minus b value\r\n\t */\r\n\tstatic antdTableSorter(a, b, key) {\r\n\t\tif(typeof a[key] === 'number' && typeof b[key] === 'number') {\r\n\t\t\treturn a[key] - b[key]\r\n\t\t}\r\n\r\n\t\tif(typeof a[key] === 'string' && typeof b[key] === 'string') {\r\n\t\t\ta = a[key].toLowerCase();\r\n\t\t\tb = b[key].toLowerCase();\r\n\t\t\treturn a > b ? -1 : b > a ? 1 : 0;\r\n\t\t}\r\n\t\treturn\r\n\t}\r\n\r\n\t/**\r\n\t * Filter array of object \r\n\t * @param {Array} list - array of objects that need to filter\r\n\t * @param {String} key - object key target\r\n\t * @param {any} value  - value that excluded from filter\r\n\t * @return {Array} a value minus b value\r\n\t */\r\n\tstatic filterArray(list, key, value) {\r\n\t\tlet data = list\r\n\t\tif(list) {\r\n\t\t\tdata = list.filter(item => item[key] === value)\r\n\t\t}\r\n\t\treturn data\r\n\t}\r\n\r\n\t/**\r\n\t * Remove object from array by value\r\n\t * @param {Array} list - array of objects\r\n\t * @param {String} key - object key target\r\n\t * @param {any} value  - target value\r\n\t * @return {Array} Array that removed target object\r\n\t */\r\n\tstatic deleteArrayRow(list, key, value) {\r\n\t\tlet data = list\r\n\t\tif(list) {\r\n\t\t\tdata = list.filter(item => item[key] !== value)\r\n\t\t}\r\n\t\treturn data\r\n\t}\r\n\r\n\t/**\r\n\t * Wild card search on all property of the object\r\n\t * @param {Number | String} input - any value to search\r\n\t * @param {Array} list - array for search\r\n\t * @return {Array} array of object contained keyword\r\n\t */\r\n\tstatic wildCardSearch(list, input) {\r\n\t\tconst searchText = (item) => {\r\n\t\t\tfor (let key in item) {\r\n\t\t\t\tif (item[key] == null) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif (item[key].toString().toUpperCase().indexOf(input.toString().toUpperCase()) !== -1) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\tlist = list.filter(value => searchText(value));\r\n\t\treturn list;\r\n\t}\r\n\r\n\t/**\r\n\t * Get Breakpoint\r\n\t * @param {Object} screens - Grid.useBreakpoint() from antd\r\n\t * @return {Array} array of breakpoint size\r\n\t */\r\n\tstatic getBreakPoint(screens) {\r\n\t\tlet breakpoints = []\r\n\t\tfor (const key in screens) {\r\n\t\t\tif (screens.hasOwnProperty(key)) {\r\n\t\t\t\tconst element = screens[key];\r\n\t\t\t\tif (element) {\r\n\t\t\t\t\tbreakpoints.push(key)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn breakpoints\r\n\t}\r\n}\r\n\r\nexport default Utils;","import {\r\n  SIGNIN,\r\n  AUTHENTICATED,\r\n  SIGNOUT,\r\n  SIGNOUT_SUCCESS,\r\n  SHOW_AUTH_MESSAGE,\r\n  HIDE_AUTH_MESSAGE,\r\n  SIGNUP,\r\n  SIGNUP_SUCCESS,\r\n  SHOW_LOADING,\r\n  SIGNIN_WITH_GOOGLE,\r\n  SIGNIN_WITH_GOOGLE_AUTHENTICATED,\r\n  SIGNIN_WITH_FACEBOOK,\r\n  SIGNIN_WITH_FACEBOOK_AUTHENTICATED\r\n} from '../constants/Auth';\r\n\r\nexport const signIn = (user) => {\r\n  return {\r\n    type: SIGNIN,\r\n    payload: user\r\n  }\r\n};\r\n\r\nexport const authenticated = (token) => {\r\n  return {\r\n    type: AUTHENTICATED,\r\n    token\r\n  }\r\n};\r\n\r\nexport const signOut = () => {\r\n  return {\r\n    type: SIGNOUT\r\n  };\r\n};\r\n\r\nexport const signOutSuccess = () => {\r\n  return {\r\n    type: SIGNOUT_SUCCESS,\r\n  }\r\n};\r\n\r\nexport const signUp = (user) => {\r\n  return {\r\n    type: SIGNUP,\r\n    payload: user\r\n  };\r\n};\r\n\r\nexport const signUpSuccess = (token) => {\r\n  return {\r\n    type: SIGNUP_SUCCESS,\r\n    token\r\n  };\r\n};\r\n\r\nexport const signInWithGoogle = () => {\r\n  return {\r\n    type: SIGNIN_WITH_GOOGLE\r\n  };\r\n};\r\n\r\nexport const signInWithGoogleAuthenticated = (token) => {\r\n  return {\r\n    type: SIGNIN_WITH_GOOGLE_AUTHENTICATED,\r\n    token\r\n  };\r\n};\r\n\r\nexport const signInWithFacebook = () => {\r\n  return {\r\n    type: SIGNIN_WITH_FACEBOOK\r\n  };\r\n};\r\n\r\nexport const signInWithFacebookAuthenticated = (token) => {\r\n  return {\r\n    type: SIGNIN_WITH_FACEBOOK_AUTHENTICATED,\r\n    token\r\n  };\r\n};\r\n\r\nexport const showAuthMessage = (message) => {\r\n  return {\r\n    type: SHOW_AUTH_MESSAGE,\r\n    message\r\n  };\r\n};\r\n\r\nexport const hideAuthMessage = () => {\r\n  return {\r\n    type: HIDE_AUTH_MESSAGE,\r\n  };\r\n};\r\n\r\nexport const showLoading = () => {\r\n  return {\r\n    type: SHOW_LOADING,\r\n  };\r\n};\r\n","export const SET_ELEMENTS = \"SET_ELEMENTS\";\r\nexport const SET_DRAGGED_ELEMENT = \"SET_DRAGGED_ELEMENT\";\r\nexport const SET_DOWNLOAD_DATA = \"SET_DOWNLOAD_DATA\";\r\nexport const ADD_BOARD_ELEMENTS = \"ADD_BOARD_ELEMENTS\";\r\nexport const UPDATE_BOARD_ELEMENTS = \"UPDATE_BOARD_ELEMENTS\";\r\nexport const CLEANUP_BOARD_ELEMENTS = \"CLEANUP_BOARD_ELEMENTS\";\r\nexport const CLEANUP = \"CLEANUP\";\r\n"],"sourceRoot":""}